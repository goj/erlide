{module, erl_prim_loader}.  %% version = 0

{exports, [{concat,1},
           {get_cwd,0},
           {get_cwd,1},
           {get_file,1},
           {get_files,2},
           {get_path,0},
           {list_dir,1},
           {module_info,0},
           {module_info,1},
           {prim_get_cwd,2},
           {prim_get_file,2},
           {prim_init,0},
           {prim_list_dir,2},
           {prim_read_file_info,2},
           {read_file_info,1},
           {release_archives,0},
           {set_path,1},
           {set_primary_archive,2},
           {start,3}]}.

{attributes, [{type,[{namelist,{type,25,list,[{var,25,'_'}]},[]}]},
              {type,
               [{name,
                 {type,26,union,
                  [{type,26,string,[]},
                   {type,26,atom,[]},
                   {type,26,namelist,[]}]},
                 []}]},
              {type,[{posix,{type,27,atom,[]},[]}]},
              {type,
               [{date,
                 {type,29,tuple,
                  [{type,29,pos_integer,[]},
                   {type,29,pos_integer,[]},
                   {type,29,pos_integer,[]}]},
                 []}]},
              {type,
               [{time,
                 {type,30,tuple,
                  [{type,30,non_neg_integer,[]},
                   {type,30,non_neg_integer,[]},
                   {type,30,non_neg_integer,[]}]},
                 []}]},
              {type,
               [{date_time,
                 {type,31,tuple,[{type,31,date,[]},{type,31,time,[]}]},
                 []}]},
              {type,
               [{{record,file_info},
                 [{typed_record_field,
                   {record_field,36,{atom,36,size}},
                   {type,36,union,
                    [{atom,36,undefined},{type,36,non_neg_integer,[]}]}},
                  {typed_record_field,
                   {record_field,37,{atom,37,type}},
                   {type,37,union,
                    [{atom,37,undefined},
                     {atom,37,device},
                     {atom,37,directory},
                     {atom,37,other},
                     {atom,37,regular},
                     {atom,37,symlink}]}},
                  {typed_record_field,
                   {record_field,38,{atom,38,access}},
                   {type,38,union,
                    [{atom,38,undefined},
                     {atom,38,read},
                     {atom,38,write},
                     {atom,38,read_write},
                     {atom,38,none}]}},
                  {typed_record_field,
                   {record_field,39,{atom,39,atime}},
                   {type,39,union,
                    [{atom,39,undefined},{type,39,date_time,[]}]}},
                  {typed_record_field,
                   {record_field,41,{atom,41,mtime}},
                   {type,41,union,
                    [{atom,41,undefined},{type,41,date_time,[]}]}},
                  {typed_record_field,
                   {record_field,42,{atom,42,ctime}},
                   {type,42,union,
                    [{atom,42,undefined},{type,42,date_time,[]}]}},
                  {typed_record_field,
                   {record_field,47,{atom,47,mode}},
                   {type,47,union,[{atom,47,undefined},{type,47,integer,[]}]}},
                  {typed_record_field,
                   {record_field,50,{atom,50,links}},
                   {type,50,union,
                    [{atom,50,undefined},{type,50,non_neg_integer,[]}]}},
                  {typed_record_field,
                   {record_field,52,{atom,52,major_device}},
                   {type,52,union,[{atom,52,undefined},{type,52,integer,[]}]}},
                  {typed_record_field,
                   {record_field,57,{atom,57,minor_device}},
                   {type,57,union,[{atom,57,undefined},{type,57,integer,[]}]}},
                  {typed_record_field,
                   {record_field,58,{atom,58,inode}},
                   {type,58,union,[{atom,58,undefined},{type,58,integer,[]}]}},
                  {typed_record_field,
                   {record_field,59,{atom,59,uid}},
                   {type,59,union,[{atom,59,undefined},{type,59,integer,[]}]}},
                  {typed_record_field,
                   {record_field,60,{atom,60,gid}},
                   {type,60,union,
                    [{atom,60,undefined},{type,60,integer,[]}]}}],
                 []}]},
              {type,
               [{{record,file_descriptor},
                 [{typed_record_field,
                   {record_field,64,{atom,64,module}},
                   {type,64,union,[{atom,64,undefined},{type,64,module,[]}]}},
                  {typed_record_field,
                   {record_field,65,{atom,65,data}},
                   {type,65,union,[{atom,65,undefined},{type,65,term,[]}]}}],
                 []}]},
              {type,
               [{fd,
                 {type,67,union,
                  [{type,67,pid,[]},
                   {type,67,record,[{atom,67,file_descriptor}]}]},
                 []}]},
              {type,[{host,{type,59,atom,[]},[]}]},
              {type,
               [{{record,state},
                 [{typed_record_field,
                   {record_field,62,{atom,62,loader}},
                   {type,62,union,
                    [{atom,62,undefined},{atom,62,efile},{atom,62,inet}]}},
                  {typed_record_field,
                   {record_field,63,{atom,63,hosts},{nil,63}},
                   {type,63,list,[{type,63,host,[]}]}},
                  {record_field,64,{atom,64,id}},
                  {record_field,65,{atom,65,data}},
                  {record_field,66,{atom,66,timeout}},
                  {record_field,67,{atom,67,n_timeouts}},
                  {typed_record_field,
                   {record_field,68,{atom,68,multi_get},{atom,68,false}},
                   {type,68,bool,[]}},
                  {record_field,69,{atom,69,prim_state}}],
                 []}]},
              {type,
               [{{record,prim_state},
                 [{record_field,92,{atom,92,debug}},
                  {record_field,92,{atom,92,cache}},
                  {record_field,92,{atom,92,primary_archive}}],
                 []}]},
              {'spec',
               [{{start,3},
                 [{type,104,'fun',
                   [{type,104,product,
                     [{type,104,term,[]},
                      {type,104,union,
                       [{type,104,atom,[]},{type,104,string,[]}]},
                      {type,104,union,
                       [{type,104,host,[]},
                        {type,104,list,[{type,104,host,[]}]}]}]},
                    {type,105,union,
                     [{type,105,tuple,[{atom,105,ok},{type,105,pid,[]}]},
                      {type,105,tuple,
                       [{atom,105,error},{type,105,term,[]}]}]}]}]}]},
              {'spec',
               [{{set_path,1},
                 [{type,176,'fun',
                   [{type,176,product,
                     [{type,176,list,[{type,176,string,[]}]}]},
                    {atom,176,ok}]}]}]},
              {'spec',
               [{{get_path,0},
                 [{type,180,'fun',
                   [{type,180,product,[]},
                    {type,180,tuple,
                     [{atom,180,ok},
                      {type,180,list,[{type,180,string,[]}]}]}]}]}]},
              {'spec',
               [{{get_file,1},
                 [{type,184,'fun',
                   [{type,184,product,
                     [{type,184,union,
                       [{type,184,atom,[]},{type,184,string,[]}]}]},
                    {type,184,union,
                     [{type,184,tuple,
                       [{atom,184,ok},
                        {type,184,binary,[]},
                        {type,184,string,[]}]},
                      {atom,184,error}]}]}]}]},
              {'spec',
               [{{get_files,2},
                 [{type,190,'fun',
                   [{type,190,product,
                     [{type,190,list,
                       [{type,190,tuple,
                         [{type,190,atom,[]},{type,190,string,[]}]}]},
                      {type,191,'fun',
                       [{type,191,product,
                         [{type,191,atom,[]},
                          {type,191,binary,[]},
                          {type,191,string,[]}]},
                        {type,191,union,
                         [{atom,191,ok},
                          {type,191,tuple,
                           [{atom,191,error},{type,191,atom,[]}]}]}]}]},
                    {type,192,union,
                     [{atom,192,ok},
                      {type,192,tuple,
                       [{atom,192,error},{type,192,atom,[]}]}]}]}]}]},
              {'spec',
               [{{list_dir,1},
                 [{type,204,'fun',
                   [{type,204,product,[{type,204,string,[]}]},
                    {type,204,union,
                     [{type,204,tuple,
                       [{atom,204,ok},{type,204,list,[{type,204,string,[]}]}]},
                      {atom,204,error}]}]}]}]},
              {'spec',
               [{{read_file_info,1},
                 [{type,209,'fun',
                   [{type,209,product,[{type,209,string,[]}]},
                    {type,209,union,
                     [{type,209,tuple,[{atom,209,ok},{type,209,tuple,any}]},
                      {atom,209,error}]}]}]}]},
              {'spec',
               [{{get_cwd,0},
                 [{type,214,'fun',
                   [{type,214,product,[]},
                    {type,214,union,
                     [{type,214,tuple,[{atom,214,ok},{type,214,string,[]}]},
                      {atom,214,error}]}]}]}]},
              {'spec',
               [{{get_cwd,1},
                 [{type,218,'fun',
                   [{type,218,product,[{type,218,string,[]}]},
                    {type,218,union,
                     [{type,218,tuple,[{atom,218,ok},{type,218,string,[]}]},
                      {atom,218,error}]}]}]}]},
              {'spec',
               [{{set_primary_archive,2},
                 [{type,222,'fun',
                   [{type,222,product,
                     [{ann_type,222,
                       [{var,222,'File'},
                        {type,222,union,
                         [{type,222,string,[]},{atom,222,undefined}]}]},
                      {ann_type,223,
                       [{var,223,'ArchiveBin'},
                        {type,223,union,
                         [{type,223,binary,[]},{atom,223,undefined}]}]}]},
                    {type,224,union,
                     [{type,224,tuple,
                       [{atom,224,ok},{type,224,list,[{type,224,string,[]}]}]},
                      {type,224,tuple,
                       [{atom,224,error},{var,224,'_'}]}]}]}]}]},
              {'spec',
               [{{release_archives,0},
                 [{type,232,'fun',
                   [{type,232,product,[]},
                    {type,232,union,
                     [{atom,232,ok},
                      {type,232,tuple,
                       [{atom,232,error},{var,232,'_'}]}]}]}]}]}]}.

{labels, 622}.


{function, debug, 2, 2}.
  {label,1}.
    {func_info,{atom,erl_prim_loader},{atom,debug},2}.
  {label,2}.
    {test,is_tuple,{f,1},[{x,0}]}.
    {test,test_arity,{f,1},[{x,0},4]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,1},[{x,2},{atom,prim_state}]}.
    {test,is_atom,{f,5},[{x,3}]}.
    {select_val,{x,3},{f,5},{list,[{atom,true},{f,3},{atom,false},{f,4}]}}.
  {label,3}.
    {move,{x,1},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,display,1}}.
  {label,4}.
    {move,{atom,ok},{x,0}}.
    return.
  {label,5}.
    {case_end,{x,3}}.


{function, start, 3, 7}.
  {label,6}.
    {func_info,{atom,erl_prim_loader},{atom,start},3}.
  {label,7}.
    {test,is_atom,{f,8},[{x,2}]}.
    {test_heap,2,3}.
    {put_list,{x,2},nil,{x,2}}.
    {call_only,3,{f,7}}.
  {label,8}.
    {allocate,2,3}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{y,1}}.
    {test,is_atom,{f,9},[{x,1}]}.
    {move,{x,1},{x,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {jump,{f,10}}.
  {label,9}.
    {move,{x,1},{x,0}}.
  {label,10}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{x,0},{x,3}}.
    {move,{x,1},{x,0}}.
    {move,{y,0},{x,1}}.
    {make_fun2,{f,621},0,73519217,4}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {call_ext,1,{extfunc,erlang,spawn_link,1}}.
    {move,{x,0},{x,1}}.
    {move,{atom,erl_prim_loader},{x,0}}.
    {move,{x,1},{y,1}}.
    {call_ext,2,{extfunc,erlang,register,2}}.
  {label,11}.
    {loop_rec,{f,15},{x,0}}.
    {test,is_tuple,{f,14},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,14},{list,[2,{f,12},3,{f,13}]}}.
  {label,12}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,14},[{x,2},{atom,ok}]}.
    {test,is_eq_exact,{f,14},[{x,1},{y,1}]}.
    remove_message.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,13}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,14},[{x,1},{atom,'EXIT'}]}.
    {test,is_eq_exact,{f,14},[{x,2},{y,1}]}.
    remove_message.
    {test_heap,3,4}.
    {put_tuple,2,{x,0}}.
    {put,{atom,error}}.
    {put,{x,3}}.
    {deallocate,2}.
    return.
  {label,14}.
    {loop_rec_end,{f,11}}.
  {label,15}.
    {wait,{f,11}}.


{function, start_it, 4, 17}.
  {label,16}.
    {func_info,{atom,erl_prim_loader},{atom,start_it},4}.
  {label,17}.
    {test,is_nonempty_list,{f,16},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_integer,{f,16},[{x,4}]}.
    {select_val,{x,4},
                {f,16},
                {list,[{integer,111},
                       {f,18},
                       {integer,105},
                       {f,21},
                       {integer,101},
                       {f,22}]}}.
  {label,18}.
    {test,is_eq_exact,{f,16},[{x,5},{literal,"se_inet"}]}.
    {allocate,4,4}.
    {'catch',{y,3},{f,19}}.
    {move,{x,1},{y,2}}.
    {move,{literal,[binary]},{x,1}}.
    {move,{literal,{spawn,ose_inet}},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {call_ext,2,{extfunc,erlang,open_port,2}}.
  {label,19}.
    {catch_end,{y,3}}.
    {test,is_tuple,{f,20},[{x,0}]}.
    {test,test_arity,{f,20},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,20},[{x,1},{atom,'EXIT'}]}.
  {label,20}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{literal,"inet"},{x,0}}.
    {call_last,4,{f,17},4}.
  {label,21}.
    {test,is_eq_exact,{f,16},[{x,5},{literal,"net"}]}.
    {allocate,4,4}.
    {init,{y,0}}.
    {move,{x,1},{y,3}}.
    {move,{atom,true},{x,1}}.
    {move,{atom,trap_exit},{x,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call,1,{f,470}}.
    {move,{x,0},{y,1}}.
    {call,1,{f,202}}.
    {test,is_tuple,{f,25},[{x,0}]}.
    {test,test_arity,{f,25},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,25},[{x,1},{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {move,{x,2},{y,0}}.
    {call,1,{f,27}}.
    {call,0,{f,304}}.
    {test_heap,10,1}.
    {put_tuple,9,{x,3}}.
    {put,{atom,state}}.
    {put,{atom,inet}}.
    {put,{y,1}}.
    {put,{y,3}}.
    {put,{y,0}}.
    {put,{integer,60000}}.
    {put,{integer,6}}.
    {put,{atom,false}}.
    {put,{x,0}}.
    {move,{y,2},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,3},{x,0}}.
    {call_last,3,{f,76},4}.
  {label,22}.
    {test,is_eq_exact,{f,16},[{x,5},{literal,"file"}]}.
    {allocate_zero,4,3}.
    {move,{x,1},{y,3}}.
    {move,{atom,true},{x,1}}.
    {move,{atom,trap_exit},{x,0}}.
    {move,{x,2},{y,2}}.
    {call_ext,2,{extfunc,erlang,process_flag,2}}.
    {move,{literal,[binary]},{x,0}}.
    {call_ext,1,{extfunc,prim_file,open,1}}.
    {test,is_tuple,{f,25},[{x,0}]}.
    {test,test_arity,{f,25},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,25},[{x,1},{atom,ok}]}.
    {move,{y,2},{x,0}}.
    {move,{x,2},{y,1}}.
    {call,1,{f,27}}.
    {move,{atom,thread_pool_size},{x,0}}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {test,is_eq_exact,{f,23},[{x,0},{integer,0}]}.
    {move,{atom,false},{x,0}}.
    {jump,{f,24}}.
  {label,23}.
    {move,{atom,true},{x,0}}.
  {label,24}.
    {move,{x,0},{y,0}}.
    {call,0,{f,304}}.
    {test_heap,10,1}.
    {put_tuple,9,{x,3}}.
    {put,{atom,state}}.
    {put,{atom,efile}}.
    {put,nil}.
    {put,{y,3}}.
    {put,{y,1}}.
    {put,{atom,infinity}}.
    {put,{atom,undefined}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{y,2},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,3},{x,0}}.
    {call_last,3,{f,76},4}.
  {label,25}.
    {badmatch,{x,0}}.


{function, init_ack, 1, 27}.
  {label,26}.
    {func_info,{atom,erl_prim_loader},{atom,init_ack},1}.
  {label,27}.
    {allocate_heap,0,3,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{atom,ok}}.
    {move,{x,2},{x,1}}.
    send.
    {move,{atom,ok},{x,0}}.
    {deallocate,0}.
    return.


{function, set_path, 1, 29}.
  {label,28}.
    {func_info,{atom,erl_prim_loader},{atom,set_path},1}.
  {label,29}.
    {test,is_list,{f,28},[{x,0}]}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,set_path}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {call_only,1,{f,55}}.


{function, get_path, 0, 31}.
  {label,30}.
    {func_info,{atom,erl_prim_loader},{atom,get_path},0}.
  {label,31}.
    {move,{literal,{get_path,[]}},{x,0}}.
    {call_only,1,{f,55}}.


{function, get_file, 1, 33}.
  {label,32}.
    {func_info,{atom,erl_prim_loader},{atom,get_file},1}.
  {label,33}.
    {test,is_atom,{f,34},[{x,0}]}.
    {allocate,0,1}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {call_last,1,{f,33},0}.
  {label,34}.
    {allocate_heap,1,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,get_file}}.
    {put,{y,0}}.
    {call,1,{f,55}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,get_file},{x,0}}.
    {call_last,3,{f,62},1}.


{function, get_files, 2, 36}.
  {label,35}.
    {func_info,{atom,erl_prim_loader},{atom,get_files},2}.
  {label,36}.
    {allocate_heap_zero,1,6,2}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,get_files}}.
    {put,{x,2}}.
    {call,1,{f,55}}.
    {test,is_tuple,{f,39},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,40},{list,[2,{f,37},3,{f,38}]}}.
  {label,37}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,40},[{x,1},{atom,error}]}.
    {deallocate,1}.
    return.
  {label,38}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,40},[{x,1},{atom,error}]}.
    {test_heap,3,4}.
    {move,{x,3},{y,0}}.
    {put_tuple,2,{x,4}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{atom,get_files},{x,0}}.
    {call,3,{f,62}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,error}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,39}.
    {test,is_eq_exact,{f,40},[{x,0},{atom,ok}]}.
    {deallocate,1}.
    return.
  {label,40}.
    {case_end,{x,0}}.


{function, list_dir, 1, 42}.
  {label,41}.
    {func_info,{atom,erl_prim_loader},{atom,list_dir},1}.
  {label,42}.
    {allocate_heap,1,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,list_dir}}.
    {put,{y,0}}.
    {call,1,{f,55}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,list_dir},{x,0}}.
    {call_last,3,{f,62},1}.


{function, read_file_info, 1, 44}.
  {label,43}.
    {func_info,{atom,erl_prim_loader},{atom,read_file_info},1}.
  {label,44}.
    {allocate_heap,1,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,read_file_info}}.
    {put,{y,0}}.
    {call,1,{f,55}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,read_file_info},{x,0}}.
    {call_last,3,{f,62},1}.


{function, get_cwd, 0, 46}.
  {label,45}.
    {func_info,{atom,erl_prim_loader},{atom,get_cwd},0}.
  {label,46}.
    {allocate,0,0}.
    {move,{literal,{get_cwd,[]}},{x,0}}.
    {call,1,{f,55}}.
    {move,nil,{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,get_cwd},{x,0}}.
    {call_last,3,{f,62},0}.


{function, get_cwd, 1, 48}.
  {label,47}.
    {func_info,{atom,erl_prim_loader},{atom,get_cwd},1}.
  {label,48}.
    {allocate_heap,1,5,1}.
    {move,{x,0},{y,0}}.
    {put_list,{y,0},nil,{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,get_cwd}}.
    {put,{x,1}}.
    {call,1,{f,55}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,get_cwd},{x,0}}.
    {call_last,3,{f,62},1}.


{function, set_primary_archive, 2, 50}.
  {label,49}.
    {func_info,{atom,erl_prim_loader},{atom,set_primary_archive},2}.
  {label,50}.
    {test,is_eq_exact,{f,51},[{x,0},{atom,undefined}]}.
    {test,is_eq_exact,{f,51},[{x,1},{atom,undefined}]}.
    {move,{literal,{set_primary_archive,undefined,undefined}},{x,0}}.
    {call_only,1,{f,55}}.
  {label,51}.
    {test,is_list,{f,49},[{x,0}]}.
    {test,is_binary,{f,49},[{x,1}]}.
    {test_heap,4,2}.
    {put_tuple,3,{x,2}}.
    {put,{atom,set_primary_archive}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,55}}.


{function, release_archives, 0, 53}.
  {label,52}.
    {func_info,{atom,erl_prim_loader},{atom,release_archives},0}.
  {label,53}.
    {move,{atom,release_archives},{x,0}}.
    {call_only,1,{f,55}}.


{function, request, 1, 55}.
  {label,54}.
    {func_info,{atom,erl_prim_loader},{atom,request},1}.
  {label,55}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{atom,erl_prim_loader},{x,0}}.
    {call_ext,1,{extfunc,erlang,whereis,1}}.
    {test_heap,3,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,1}}.
    send.
  {label,56}.
    {loop_rec,{f,60},{x,0}}.
    {test,is_tuple,{f,59},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,59},{list,[2,{f,57},3,{f,58}]}}.
  {label,57}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,59},[{x,1},{y,0}]}.
    remove_message.
    {move,{x,2},{x,0}}.
    {deallocate,1}.
    return.
  {label,58}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,59},[{x,1},{atom,'EXIT'}]}.
    {test,is_eq_exact,{f,59},[{x,2},{y,0}]}.
    remove_message.
    {move,{atom,error},{x,0}}.
    {deallocate,1}.
    return.
  {label,59}.
    {loop_rec_end,{f,56}}.
  {label,60}.
    {wait,{f,56}}.


{function, check_file_result, 3, 62}.
  {label,61}.
    {func_info,{atom,erl_prim_loader},{atom,check_file_result},3}.
  {label,62}.
    {test,is_tuple,{f,74},[{x,2}]}.
    {test,test_arity,{f,74},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {test,is_eq_exact,{f,74},[{x,3},{atom,error}]}.
    {test,is_atom,{f,64},[{x,4}]}.
    {select_val,{x,4},
                {f,64},
                {list,[{atom,enoent},{f,63},{atom,enotdir},{f,63}]}}.
  {label,63}.
    {move,{atom,error},{x,0}}.
    return.
  {label,64}.
    {allocate,4,5}.
    {init,{y,0}}.
    {'catch',{y,3},{f,65}}.
    {move,{x,0},{y,2}}.
    {move,{x,4},{x,0}}.
    {move,{x,1},{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
  {label,65}.
    {catch_end,{y,3}}.
    {test,is_tuple,{f,66},[{x,0}]}.
    {test,test_arity,{f,66},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,66},[{x,1},{atom,'EXIT'}]}.
    {move,{atom,error},{x,0}}.
    {deallocate,4}.
    return.
  {label,66}.
    {bif,self,{f,0},[],{x,1}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{x,0}}.
    {move,{atom,registered_name},{x,1}}.
    {call_ext,2,{extfunc,erlang,process_info,2}}.
    {test,is_tuple,{f,67},[{x,0}]}.
    {test,test_arity,{f,67},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,67},[{x,1},{atom,registered_name}]}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{literal,"."},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"Process: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {jump,{f,68}}.
  {label,67}.
    {move,nil,{x,0}}.
  {label,68}.
    {move,{x,0},{y,0}}.
    {test,is_atom,{f,69},[{y,1}]}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {jump,{f,71}}.
  {label,69}.
    {test,is_list,{f,70},[{y,1}]}.
    {move,{y,1},{x,0}}.
    {jump,{f,71}}.
  {label,70}.
    {move,nil,{x,0}}.
  {label,71}.
    {test,is_nil,{f,72},[{x,0}]}.
    {move,{y,2},{x,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {test_heap,4,1}.
    {put_list,{integer,32},{y,0},{x,2}}.
    {put_list,{integer,46},{x,2},{x,1}}.
    {kill,{y,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"Function: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{integer,32},{x,0},{x,2}}.
    {put_list,{integer,46},{x,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"File operation error: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {jump,{f,73}}.
  {label,72}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {move,{x,1},{y,2}}.
    {kill,{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {test_heap,4,1}.
    {put_list,{integer,32},{y,0},{x,2}}.
    {put_list,{integer,46},{x,2},{x,1}}.
    {kill,{y,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"Function: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{integer,32},{x,0},{x,2}}.
    {put_list,{integer,46},{x,2},{x,1}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"Target: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{integer,32},{x,0},{x,2}}.
    {put_list,{integer,46},{x,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{literal,"File operation error: "},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
  {label,73}.
    {move,{x,0},{y,3}}.
    {call_ext,0,{extfunc,erlang,group_leader,0}}.
    {test_heap,11,1}.
    {bif,self,{f,0},[],{x,1}}.
    {put_tuple,3,{x,2}}.
    {put,{x,1}}.
    {put,{atom,std_error}}.
    {put,{y,3}}.
    {put_tuple,3,{x,3}}.
    {put,{atom,error_report}}.
    {put,{x,0}}.
    {put,{x,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,notify}}.
    {put,{x,3}}.
    {trim,4,0}.
    {move,{atom,error_logger},{x,0}}.
    send.
    {move,{atom,error},{x,0}}.
    {deallocate,0}.
    return.
  {label,74}.
    {move,{x,2},{x,0}}.
    return.


{function, loop, 3, 76}.
  {label,75}.
    {func_info,{atom,erl_prim_loader},{atom,loop},3}.
  {label,76}.
    {test,is_tuple,{f,99},[{x,0}]}.
    {test,test_arity,{f,99},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},5,{x,4}}.
    {test,is_eq_exact,{f,99},[{x,3},{atom,state}]}.
    {allocate,5,5}.
    {init,{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,3}}.
    {move,{x,4},{y,4}}.
  {label,77}.
    {loop_rec,{f,96},{x,0}}.
    {test,is_tuple,{f,95},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,95},{list,[2,{f,78},3,{f,93}]}}.
  {label,78}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_pid,{f,95},[{x,1}]}.
    remove_message.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,4}}.
    {test,is_tuple,{f,89},[{x,2}]}.
    {select_tuple_arity,{x,2},{f,90},{list,[2,{f,79},3,{f,88}]}}.
  {label,79}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,3}}.
    {test,is_atom,{f,90},[{x,0}]}.
    {select_val,{x,0},
                {f,90},
                {list,[{atom,get_files},
                       {f,80},
                       {atom,get_cwd},
                       {f,81},
                       {atom,get_path},
                       {f,83},
                       {atom,get_file},
                       {f,84},
                       {atom,read_file_info},
                       {f,85},
                       {atom,list_dir},
                       {f,86},
                       {atom,set_path},
                       {f,87}]}}.
  {label,80}.
    {test,is_tuple,{f,90},[{x,3}]}.
    {test,test_arity,{f,90},[{x,3},2]}.
    {get_tuple_element,{x,3},0,{x,1}}.
    {get_tuple_element,{x,3},1,{x,3}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,4,{f,101}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,81}.
    {test,is_nonempty_list,{f,82},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_nil,{f,90},[{x,5}]}.
    {move,{x,3},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,2,{f,120}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,82}.
    {test,is_nil,{f,90},[{x,3}]}.
    {move,nil,{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,2,{f,120}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,83}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,1}}.
    {jump,{f,91}}.
  {label,84}.
    {move,{y,1},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,3,{f,104}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,85}.
    {move,{x,3},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,2,{f,116}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,86}.
    {move,{x,3},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,2,{f,112}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,87}.
    {kill,{y,1}}.
    {move,{x,3},{x,0}}.
    {call,1,{f,431}}.
    {move,{y,3},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,ok},{x,0}}.
    {jump,{f,91}}.
  {label,88}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {get_tuple_element,{x,2},1,{x,3}}.
    {get_tuple_element,{x,2},2,{x,4}}.
    {test,is_eq_exact,{f,90},[{x,0},{atom,set_primary_archive}]}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,3,{f,108}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,89}.
    {test,is_eq_exact,{f,90},[{x,2},{atom,release_archives}]}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {call,1,{f,110}}.
    {test,is_tuple,{f,97},[{x,0}]}.
    {test,test_arity,{f,97},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {jump,{f,91}}.
  {label,90}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{atom,ignore},{x,0}}.
  {label,91}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,3}}.
    {test,is_ne_exact,{f,92},[{x,0},{atom,ignore}]}.
    {test_heap,3,3}.
    {bif,self,{f,0},[],{x,3}}.
    {put_tuple,2,{x,1}}.
    {put,{x,3}}.
    {put,{x,0}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    send.
  {label,92}.
    {test,is_tuple,{f,98},[{y,3}]}.
    {test,test_arity,{f,98},[{y,3},9]}.
    {get_tuple_element,{y,3},0,{x,1023}}.
    {test,is_eq_exact,{f,98},[{x,1023},{atom,state}]}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {call_last,3,{f,76},5}.
  {label,93}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,95},[{x,1},{atom,'EXIT'}]}.
    {test,is_eq_exact,{f,94},[{x,2},{y,2}]}.
    remove_message.
    {move,{y,3},{x,0}}.
    {move,{x,3},{y,4}}.
    {trim,4,1}.
    {call,1,{f,124}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,exit,1},1}.
  {label,94}.
    remove_message.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {call,3,{f,128}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {call_last,3,{f,76},5}.
  {label,95}.
    remove_message.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {call_last,3,{f,76},5}.
  {label,96}.
    {wait_timeout,{f,77},{y,4}}.
    timeout.
    {move,{y,2},{x,1}}.
    {move,{y,3},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {call,2,{f,132}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {call_last,3,{f,76},5}.
  {label,97}.
    {badmatch,{x,0}}.
  {label,98}.
    {test_heap,4,0}.
    {put_tuple,3,{x,0}}.
    {put,{atom,bad_state}}.
    {put,{y,4}}.
    {put,{y,3}}.
    {call_ext_last,1,{extfunc,erlang,exit,1},5}.
  {label,99}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, handle_get_files, 4, 101}.
  {label,100}.
    {func_info,{atom,erl_prim_loader},{atom,handle_get_files},4}.
  {label,101}.
    {test,is_tuple,{f,102},[{x,0}]}.
    {test,test_arity,{f,102},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,4}}.
    {get_tuple_element,{x,0},7,{x,5}}.
    {test,is_eq_exact,{f,102},[{x,4},{atom,state}]}.
    {test,is_eq_exact,{f,102},[{x,5},{atom,true}]}.
    {allocate,0,4}.
    {move,{x,2},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,4}}.
    {move,{x,0},{x,3}}.
    {move,{x,4},{x,0}}.
    {make_fun2,{f,617},1,59294489,4}.
    {call_fun,0}.
    {deallocate,0}.
    return.
  {label,102}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{literal,{error,no_multi_get}}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    return.


{function, handle_get_file, 3, 104}.
  {label,103}.
    {func_info,{atom,erl_prim_loader},{atom,handle_get_file},3}.
  {label,104}.
    {test,is_tuple,{f,103},[{x,0}]}.
    {test,test_arity,{f,103},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {test,is_eq_exact,{f,103},[{x,3},{atom,state}]}.
    {test,is_atom,{f,103},[{x,4}]}.
    {select_val,{x,4},
                {f,103},
                {list,[{atom,efile},{f,105},{atom,inet},{f,106}]}}.
  {label,105}.
    {allocate,0,3}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {make_fun2,{f,613},2,97618852,3}.
    {call_fun,0}.
    {deallocate,0}.
    return.
  {label,106}.
    {allocate,0,3}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {make_fun2,{f,609},3,84727123,3}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_set_primary_archive, 3, 108}.
  {label,107}.
    {func_info,{atom,erl_prim_loader},{atom,handle_set_primary_archive},3}.
  {label,108}.
    {test,is_tuple,{f,107},[{x,0}]}.
    {test,test_arity,{f,107},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {test,is_eq_exact,{f,107},[{x,3},{atom,state}]}.
    {test,is_eq_exact,{f,107},[{x,4},{atom,efile}]}.
    {allocate,0,3}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {make_fun2,{f,605},4,4823423,3}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_release_archives, 1, 110}.
  {label,109}.
    {func_info,{atom,erl_prim_loader},{atom,handle_release_archives},1}.
  {label,110}.
    {test,is_tuple,{f,109},[{x,0}]}.
    {test,test_arity,{f,109},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,109},[{x,1},{atom,state}]}.
    {test,is_eq_exact,{f,109},[{x,2},{atom,efile}]}.
    {allocate,0,1}.
    {make_fun2,{f,601},5,41119430,1}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_list_dir, 2, 112}.
  {label,111}.
    {func_info,{atom,erl_prim_loader},{atom,handle_list_dir},2}.
  {label,112}.
    {test,is_tuple,{f,111},[{x,0}]}.
    {test,test_arity,{f,111},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,111},[{x,2},{atom,state}]}.
    {test,is_atom,{f,111},[{x,3}]}.
    {select_val,{x,3},
                {f,111},
                {list,[{atom,efile},{f,113},{atom,inet},{f,114}]}}.
  {label,113}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,597},6,86224164,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.
  {label,114}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,593},7,14509926,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_read_file_info, 2, 116}.
  {label,115}.
    {func_info,{atom,erl_prim_loader},{atom,handle_read_file_info},2}.
  {label,116}.
    {test,is_tuple,{f,115},[{x,0}]}.
    {test,test_arity,{f,115},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,115},[{x,2},{atom,state}]}.
    {test,is_atom,{f,115},[{x,3}]}.
    {select_val,{x,3},
                {f,115},
                {list,[{atom,efile},{f,117},{atom,inet},{f,118}]}}.
  {label,117}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,589},8,15196858,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.
  {label,118}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,585},9,71285252,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_get_cwd, 2, 120}.
  {label,119}.
    {func_info,{atom,erl_prim_loader},{atom,handle_get_cwd},2}.
  {label,120}.
    {test,is_tuple,{f,119},[{x,0}]}.
    {test,test_arity,{f,119},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,119},[{x,2},{atom,state}]}.
    {test,is_atom,{f,119},[{x,3}]}.
    {select_val,{x,3},
                {f,119},
                {list,[{atom,efile},{f,121},{atom,inet},{f,122}]}}.
  {label,121}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,581},10,59207092,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.
  {label,122}.
    {allocate,0,2}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {make_fun2,{f,577},11,117475929,2}.
    {call_fun,0}.
    {deallocate,0}.
    return.


{function, handle_stop, 1, 124}.
  {label,123}.
    {func_info,{atom,erl_prim_loader},{atom,handle_stop},1}.
  {label,124}.
    {test,is_tuple,{f,123},[{x,0}]}.
    {test,test_arity,{f,123},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,123},[{x,1},{atom,state}]}.
    {test,is_atom,{f,123},[{x,2}]}.
    {select_val,{x,2},
                {f,123},
                {list,[{atom,efile},{f,125},{atom,inet},{f,126}]}}.
  {label,125}.
    {call_only,1,{f,191}}.
  {label,126}.
    {call_only,1,{f,282}}.


{function, handle_exit, 3, 128}.
  {label,127}.
    {func_info,{atom,erl_prim_loader},{atom,handle_exit},3}.
  {label,128}.
    {test,is_tuple,{f,127},[{x,0}]}.
    {test,test_arity,{f,127},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {test,is_eq_exact,{f,127},[{x,3},{atom,state}]}.
    {test,is_atom,{f,127},[{x,4}]}.
    {select_val,{x,4},
                {f,127},
                {list,[{atom,efile},{f,129},{atom,inet},{f,130}]}}.
  {label,129}.
    {call_only,3,{f,193}}.
  {label,130}.
    {call_only,3,{f,236}}.


{function, handle_timeout, 2, 132}.
  {label,131}.
    {func_info,{atom,erl_prim_loader},{atom,handle_timeout},2}.
  {label,132}.
    {test,is_tuple,{f,131},[{x,0}]}.
    {test,test_arity,{f,131},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},1,{x,3}}.
    {test,is_eq_exact,{f,131},[{x,2},{atom,state}]}.
    {test,is_atom,{f,131},[{x,3}]}.
    {select_val,{x,3},
                {f,131},
                {list,[{atom,efile},{f,133},{atom,inet},{f,134}]}}.
  {label,133}.
    {call_only,2,{f,197}}.
  {label,134}.
    {call_only,2,{f,240}}.


{function, efile_multi_get_file_from_port, 4, 136}.
  {label,135}.
    {func_info,{atom,erl_prim_loader},{atom,efile_multi_get_file_from_port},4}.
  {label,136}.
    {allocate,5,4}.
    {init,{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,4}}.
    {call_ext,0,{extfunc,erlang,make_ref,0}}.
    {move,{x,0},{y,0}}.
    {move,{atom,thread_pool_size},{x,0}}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {move,{x,0},{x,1}}.
    {move,{integer,200},{x,0}}.
    {call,2,{f,428}}.
    {move,{y,2},{x,4}}.
    {move,{y,4},{x,3}}.
    {move,{y,1},{x,5}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,6}}.
    {move,{integer,0},{x,1}}.
    {move,{atom,ok},{x,7}}.
    {move,{y,3},{x,0}}.
    {call_last,8,{f,138},5}.


{function, efile_multi_get_file_from_port2, 8, 138}.
  {label,137}.
    {func_info,{atom,erl_prim_loader},
               {atom,efile_multi_get_file_from_port2},
               8}.
  {label,138}.
    {test,is_nonempty_list,{f,139},[{x,0}]}.
    {get_list,{x,0},{x,8},{x,9}}.
    {test,is_lt,{f,139},[{x,1},{x,2}]}.
    {allocate_zero,8,10}.
    {bif,self,{f,0},[],{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,2},{y,6}}.
    {move,{x,3},{x,12}}.
    {move,{x,4},{x,3}}.
    {move,{x,12},{x,4}}.
    {move,{x,5},{x,2}}.
    {move,{x,8},{x,5}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,3},{y,4}}.
    {move,{x,4},{y,5}}.
    {move,{x,9},{y,7}}.
    {make_fun2,{f,575},12,50133685,6}.
    {call_ext,1,{extfunc,erlang,spawn,1}}.
    {gc_bif,'+',{f,0},0,[{y,0},{integer,1}],{x,1}}.
    {move,{y,4},{x,4}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,5}}.
    {move,{y,6},{x,2}}.
    {move,{y,2},{x,6}}.
    {move,{y,1},{x,7}}.
    {move,{y,7},{x,0}}.
    {call_last,8,{f,138},8}.
  {label,139}.
    {test,is_lt,{f,146},[{integer,0},{x,1}]}.
    {allocate,7,8}.
    {move,{x,7},{y,0}}.
    {move,{x,6},{y,1}}.
    {move,{x,5},{y,2}}.
    {move,{x,4},{y,3}}.
    {move,{x,2},{y,4}}.
    {move,{x,1},{y,5}}.
    {move,{x,0},{y,6}}.
  {label,140}.
    {loop_rec,{f,145},{x,0}}.
    {test,is_tuple,{f,144},[{x,0}]}.
    {test,test_arity,{f,144},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_tuple,{f,141},[{x,2}]}.
    {test,test_arity,{f,142},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_eq_exact,{f,142},[{x,4},{atom,error}]}.
    {test,is_eq_exact,{f,142},[{x,1},{y,1}]}.
    remove_message.
    {gc_bif,'-',{f,0},4,[{y,5},{integer,1}],{x,1}}.
    {move,{y,2},{x,5}}.
    {move,{y,3},{x,4}}.
    {move,{y,1},{x,6}}.
    {move,{x,2},{x,7}}.
    {move,{y,4},{x,2}}.
    {move,{y,6},{x,0}}.
    {call_last,8,{f,138},7}.
  {label,141}.
    {test,is_eq_exact,{f,142},[{x,2},{atom,ok}]}.
    {test,is_eq_exact,{f,142},[{x,1},{y,1}]}.
    remove_message.
    {gc_bif,'-',{f,0},4,[{y,5},{integer,1}],{x,1}}.
    {move,{y,3},{x,4}}.
    {move,{y,2},{x,5}}.
    {move,{y,4},{x,2}}.
    {move,{y,1},{x,6}}.
    {move,{y,0},{x,7}}.
    {move,{y,6},{x,0}}.
    {call_last,8,{f,138},7}.
  {label,142}.
    {test,is_tuple,{f,143},[{x,3}]}.
    {test,test_arity,{f,143},[{x,3},3]}.
    {get_tuple_element,{x,3},0,{x,4}}.
    {get_tuple_element,{x,3},1,{x,5}}.
    {get_tuple_element,{x,3},2,{x,6}}.
    {test,is_eq_exact,{f,143},[{x,4},{atom,error}]}.
    {test,is_eq_exact,{f,143},[{x,5},{atom,emfile}]}.
    {test,is_eq_exact,{f,143},[{x,1},{y,1}]}.
    remove_message.
    {gc_bif,'-',{f,0},7,[{y,5},{integer,1}],{x,0}}.
    {gc_bif,'-',{f,0},7,[{y,4},{integer,1}],{x,1}}.
    {test_heap,2,7}.
    {put_list,{x,2},{y,6},{x,8}}.
    {move,{y,3},{x,4}}.
    {move,{x,6},{x,3}}.
    {move,{y,2},{x,5}}.
    {move,{x,1},{x,2}}.
    {move,{y,1},{x,6}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,7}}.
    {move,{x,8},{x,0}}.
    {call_last,8,{f,138},7}.
  {label,143}.
    {test,is_tuple,{f,144},[{x,2}]}.
    {test,test_arity,{f,144},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,4}}.
    {test,is_tuple,{f,144},[{x,3}]}.
    {test,test_arity,{f,144},[{x,3},3]}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {get_tuple_element,{x,3},2,{x,7}}.
    {test,is_eq_exact,{f,144},[{x,5},{atom,error}]}.
    {test,is_eq_exact,{f,144},[{x,1},{y,1}]}.
    remove_message.
    {gc_bif,'-',{f,0},8,[{y,5},{integer,1}],{x,0}}.
    {test_heap,4,8}.
    {put_tuple,3,{x,8}}.
    {put,{atom,error}}.
    {put,{x,6}}.
    {put,{x,4}}.
    {move,{y,3},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{y,2},{x,5}}.
    {move,{integer,0},{x,2}}.
    {move,{y,1},{x,6}}.
    {move,{x,0},{x,1}}.
    {move,{x,8},{x,7}}.
    {move,{y,6},{x,0}}.
    {call_last,8,{f,138},7}.
  {label,144}.
    {loop_rec_end,{f,140}}.
  {label,145}.
    {wait,{f,140}}.
  {label,146}.
    {test,is_eq_exact,{f,137},[{x,1},{integer,0}]}.
    {test_heap,3,8}.
    {put_tuple,2,{x,0}}.
    {put,{x,7}}.
    {put,{x,3}}.
    return.


{function, efile_par_get_file, 6, 148}.
  {label,147}.
    {func_info,{atom,erl_prim_loader},{atom,efile_par_get_file},6}.
  {label,148}.
    {test,is_tuple,{f,147},[{x,2}]}.
    {test,test_arity,{f,147},[{x,2},2]}.
    {allocate,9,6}.
    {init,{y,0}}.
    {get_tuple_element,{x,2},0,{y,8}}.
    {get_tuple_element,{x,2},1,{y,7}}.
    {move,{x,0},{y,6}}.
    {move,{literal,[binary]},{x,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,4},{y,2}}.
    {move,{x,3},{y,3}}.
    {move,{x,2},{y,4}}.
    {move,{x,1},{y,5}}.
    {call_ext,1,{extfunc,prim_file,open,1}}.
    {test,is_tuple,{f,156},[{x,0}]}.
    {test,test_arity,{f,156},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,156},[{x,1}]}.
    {select_val,{x,1},{f,156},{list,[{atom,ok},{f,149},{atom,error},{f,153}]}}.
  {label,149}.
    {test,is_tuple,{f,155},[{y,5}]}.
    {test,test_arity,{f,155},[{y,5},9]}.
    {get_tuple_element,{y,5},0,{x,0}}.
    {get_tuple_element,{y,5},4,{x,1}}.
    {test,is_eq_exact,{f,155},[{x,0},{atom,state}]}.
    {move,{x,1},{y,0}}.
    {move,{y,5},{x,1}}.
    {move,{integer,5},{x,0}}.
    {move,{x,2},{y,5}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,7},{x,1}}.
    {kill,{y,3}}.
    {kill,{y,7}}.
    {call,3,{f,158}}.
    {test,is_tuple,{f,156},[{x,0}]}.
    {test,test_arity,{f,156},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,156},[{x,1}]}.
    {select_tuple_arity,{x,1},{f,156},{list,[2,{f,150},3,{f,151}]}}.
  {label,150}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_eq_exact,{f,156},[{x,3},{atom,error}]}.
    {test_heap,8,5}.
    {put_tuple,3,{x,1}}.
    {put,{atom,error}}.
    {put,{x,4}}.
    {put,{x,2}}.
    {put_tuple,3,{x,0}}.
    {put,{y,6}}.
    {put,{y,4}}.
    {put,{x,1}}.
    {jump,{f,152}}.
  {label,151}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {get_tuple_element,{x,1},2,{x,5}}.
    {test,is_eq_exact,{f,156},[{x,3},{atom,ok}]}.
    {move,{x,2},{x,6}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,8},{x,0}}.
    {move,{x,6},{y,8}}.
    {kill,{y,1}}.
    {kill,{y,4}}.
    {call_fun,3}.
    {test,is_tuple,{f,154},[{y,8}]}.
    {test,test_arity,{f,154},[{y,8},9]}.
    {get_tuple_element,{y,8},0,{x,1}}.
    {test,is_eq_exact,{f,154},[{x,1},{atom,state}]}.
    {move,{x,0},{x,3}}.
    {move,{y,8},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{integer,5},{x,0}}.
    {move,{x,3},{y,8}}.
    {kill,{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,6}}.
    {put,{y,8}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
  {label,152}.
    {move,{x,0},{y,8}}.
    {move,{y,5},{x,0}}.
    {move,{y,2},{y,7}}.
    {trim,7,2}.
    {call_ext,1,{extfunc,prim_file,close,1}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    send.
    {deallocate,2}.
    return.
  {label,153}.
    {test_heap,8,3}.
    {put_tuple,3,{x,3}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put,{y,5}}.
    {put_tuple,3,{x,1}}.
    {put,{y,6}}.
    {put,{y,4}}.
    {put,{x,3}}.
    {move,{y,2},{x,0}}.
    send.
    {deallocate,9}.
    return.
  {label,154}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,155}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},9}.
  {label,156}.
    {case_end,{x,0}}.


{function, efile_get_file_from_port, 3, 158}.
  {label,157}.
    {func_info,{atom,erl_prim_loader},{atom,efile_get_file_from_port},3}.
  {label,158}.
    {allocate,3,3}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{y,1}}.
    {call,1,{f,387}}.
    {test,is_atom,{f,162},[{x,0}]}.
    {select_val,{x,0},
                {f,162},
                {list,[{atom,true},{f,159},{atom,false},{f,161}]}}.
  {label,159}.
    {test,is_eq_exact,{f,160},[{y,0},nil]}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,164},3}.
  {label,160}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,171},3}.
  {label,161}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,164},3}.
  {label,162}.
    {case_end,{x,0}}.


{function, efile_get_file_from_port2, 2, 164}.
  {label,163}.
    {func_info,{atom,erl_prim_loader},{atom,efile_get_file_from_port2},2}.
  {label,164}.
    {test,is_tuple,{f,163},[{x,0}]}.
    {test,test_arity,{f,163},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},8,{x,3}}.
    {test,is_eq_exact,{f,163},[{x,2},{atom,state}]}.
    {allocate,2,4}.
    {move,{x,0},{y,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,2,{f,332}}.
    {test,is_tuple,{f,169},[{x,0}]}.
    {test,test_arity,{f,169},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,168},[{x,1}]}.
    {test,test_arity,{f,168},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {test,is_atom,{f,168},[{x,0}]}.
    {select_val,{x,0},{f,168},{list,[{atom,error},{f,165},{atom,ok},{f,166}]}}.
  {label,165}.
    {test,is_ne_exact,{f,167},[{x,3},{atom,port_died}]}.
    {move,{y,1},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,1}}.
    {trim,1,1}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,0}}.
    {deallocate,1}.
    return.
  {label,166}.
    {move,{y,1},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,1}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,7,1}.
    {put_tuple,3,{x,1}}.
    {put,{atom,ok}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,0}}.
    {deallocate,2}.
    return.
  {label,167}.
    {move,{atom,'prim_load port died'},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,exit,1},2}.
  {label,168}.
    {case_end,{x,1}}.
  {label,169}.
    {badmatch,{x,0}}.


{function, efile_get_file_from_port3, 3, 171}.
  {label,170}.
    {func_info,{atom,erl_prim_loader},{atom,efile_get_file_from_port3},3}.
  {label,171}.
    {test,is_nonempty_list,{f,174},[{x,2}]}.
    {allocate_heap,3,6,3}.
    {get_list,{x,2},{x,3},{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_list,{x,1},nil,{x,0}}.
    {put_list,{literal,"/"},{x,0},{x,2}}.
    {put_list,{x,3},{x,2},{x,0}}.
    {call,1,{f,397}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call,2,{f,164}}.
    {test,is_tuple,{f,173},[{x,0}]}.
    {test,test_arity,{f,173},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,173},[{x,1}]}.
    {test,test_arity,{f,173},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_eq_exact,{f,173},[{x,3},{atom,error}]}.
    {test,is_ne_exact,{f,173},[{x,4},{atom,emfile}]}.
    {test,is_nil,{f,172},[{y,0}]}.
    {test_heap,6,5}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,4}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {deallocate,3}.
    return.
  {label,172}.
    {move,{y,2},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{y,0},{x,2}}.
    {call_last,3,{f,171},3}.
  {label,173}.
    {deallocate,3}.
    return.
  {label,174}.
    {test,is_nil,{f,170},[{x,2}]}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{literal,{error,enoent}}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    return.


{function, efile_set_primary_archive, 3, 176}.
  {label,175}.
    {func_info,{atom,erl_prim_loader},{atom,efile_set_primary_archive},3}.
  {label,176}.
    {test,is_tuple,{f,175},[{x,0}]}.
    {test,test_arity,{f,175},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},8,{x,4}}.
    {test,is_eq_exact,{f,175},[{x,3},{atom,state}]}.
    {allocate,1,5}.
    {move,{x,0},{y,0}}.
    {move,{x,4},{x,0}}.
    {call,3,{f,322}}.
    {test,is_tuple,{f,177},[{x,0}]}.
    {test,test_arity,{f,177},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,177}.
    {badmatch,{x,0}}.


{function, efile_release_archives, 1, 179}.
  {label,178}.
    {func_info,{atom,erl_prim_loader},{atom,efile_release_archives},1}.
  {label,179}.
    {test,is_tuple,{f,178},[{x,0}]}.
    {test,test_arity,{f,178},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},8,{x,2}}.
    {test,is_eq_exact,{f,178},[{x,1},{atom,state}]}.
    {allocate,1,3}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,0}}.
    {call,1,{f,309}}.
    {test,is_tuple,{f,180},[{x,0}]}.
    {test,test_arity,{f,180},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,180}.
    {badmatch,{x,0}}.


{function, efile_list_dir, 2, 182}.
  {label,181}.
    {func_info,{atom,erl_prim_loader},{atom,efile_list_dir},2}.
  {label,182}.
    {test,is_tuple,{f,181},[{x,0}]}.
    {test,test_arity,{f,181},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},8,{x,3}}.
    {test,is_eq_exact,{f,181},[{x,2},{atom,state}]}.
    {allocate,1,4}.
    {move,{x,0},{y,0}}.
    {move,{x,3},{x,0}}.
    {call,2,{f,340}}.
    {test,is_tuple,{f,183},[{x,0}]}.
    {test,test_arity,{f,183},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,183}.
    {badmatch,{x,0}}.


{function, efile_read_file_info, 2, 185}.
  {label,184}.
    {func_info,{atom,erl_prim_loader},{atom,efile_read_file_info},2}.
  {label,185}.
    {test,is_tuple,{f,184},[{x,0}]}.
    {test,test_arity,{f,184},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},8,{x,3}}.
    {test,is_eq_exact,{f,184},[{x,2},{atom,state}]}.
    {allocate,1,4}.
    {move,{x,0},{y,0}}.
    {move,{x,3},{x,0}}.
    {call,2,{f,351}}.
    {test,is_tuple,{f,186},[{x,0}]}.
    {test,test_arity,{f,186},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,186}.
    {badmatch,{x,0}}.


{function, efile_get_cwd, 2, 188}.
  {label,187}.
    {func_info,{atom,erl_prim_loader},{atom,efile_get_cwd},2}.
  {label,188}.
    {test,is_tuple,{f,187},[{x,0}]}.
    {test,test_arity,{f,187},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},8,{x,3}}.
    {test,is_eq_exact,{f,187},[{x,2},{atom,state}]}.
    {allocate,1,4}.
    {move,{x,0},{y,0}}.
    {move,{x,3},{x,0}}.
    {call,2,{f,362}}.
    {test,is_tuple,{f,189},[{x,0}]}.
    {test,test_arity,{f,189},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{integer,9},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,189}.
    {badmatch,{x,0}}.


{function, efile_stop_port, 1, 191}.
  {label,190}.
    {func_info,{atom,erl_prim_loader},{atom,efile_stop_port},1}.
  {label,191}.
    {test,is_tuple,{f,190},[{x,0}]}.
    {test,test_arity,{f,190},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},4,{x,2}}.
    {test,is_eq_exact,{f,190},[{x,1},{atom,state}]}.
    {allocate,1,3}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_file,close,1}}.
    {move,{y,0},{x,1}}.
    {move,{atom,noport},{x,2}}.
    {move,{integer,5},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},1}.


{function, efile_exit_port, 3, 193}.
  {label,192}.
    {func_info,{atom,erl_prim_loader},{atom,efile_exit_port},3}.
  {label,193}.
    {test,is_tuple,{f,194},[{x,0}]}.
    {test,test_arity,{f,194},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1023}}.
    {test,is_eq_exact,{f,194},[{x,1023},{atom,state}]}.
    {get_tuple_element,{x,0},4,{x,3}}.
    {test,is_ne_exact,{f,195},[{x,3},{x,1}]}.
  {label,194}.
    return.
  {label,195}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{atom,port_died}}.
    {put,{x,2}}.
    {call_ext_only,1,{extfunc,erlang,exit,1}}.


{function, efile_timeout_handler, 2, 197}.
  {label,196}.
    {func_info,{atom,erl_prim_loader},{atom,efile_timeout_handler},2}.
  {label,197}.
    {test,is_tuple,{f,196},[{x,0}]}.
    {test,test_arity,{f,196},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {get_tuple_element,{x,0},6,{x,3}}.
    {test,is_eq_exact,{f,196},[{x,2},{atom,state}]}.
    {allocate,0,4}.
    {test,is_ge,{f,198},[{integer,0},{x,3}]}.
    {call,1,{f,179}}.
    {test,is_tuple,{f,200},[{x,0}]}.
    {test,test_arity,{f,200},[{x,0},2]}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {test,is_tuple,{f,199},[{x,1}]}.
    {test,test_arity,{f,199},[{x,1},9]}.
    {get_tuple_element,{x,1},0,{x,0}}.
    {test,is_eq_exact,{f,199},[{x,0},{atom,state}]}.
    {move,{integer,6},{x,2}}.
    {move,{integer,7},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},0}.
  {label,198}.
    {gc_bif,'-',{f,0},4,[{x,3},{integer,1}],{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{integer,7},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},0}.
  {label,199}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},0}.
  {label,200}.
    {badmatch,{x,0}}.


{function, find_master, 1, 202}.
  {label,201}.
    {func_info,{atom,erl_prim_loader},{atom,find_master},1}.
  {label,202}.
    {move,{integer,10000},{x,3}}.
    {move,{integer,10},{x,4}}.
    {move,{integer,500},{x,2}}.
    {move,{integer,60000},{x,5}}.
    {move,{integer,3},{x,1}}.
    {call_only,6,{f,204}}.


{function, find_master, 6, 204}.
  {label,203}.
    {func_info,{atom,erl_prim_loader},{atom,find_master},6}.
  {label,204}.
    {allocate,6,6}.
    {move,{x,0},{y,5}}.
    {move,{integer,0},{x,0}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {call,1,{f,294}}.
    {test,is_tuple,{f,205},[{x,0}]}.
    {test,test_arity,{f,205},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,205},[{x,1},{atom,ok}]}.
    {move,{y,2},{x,4}}.
    {move,nil,{x,5}}.
    {move,{y,3},{x,3}}.
    {move,{y,1},{x,6}}.
    {move,{y,4},{x,1}}.
    {move,{y,0},{x,7}}.
    {move,{x,2},{x,0}}.
    {move,{y,5},{x,2}}.
    {call_last,8,{f,207},6}.
  {label,205}.
    {badmatch,{x,0}}.


{function, find_master, 8, 207}.
  {label,206}.
    {func_info,{atom,erl_prim_loader},{atom,find_master},8}.
  {label,207}.
    {allocate,9,8}.
    {init,{y,0}}.
    {move,{x,7},{y,1}}.
    {move,{x,6},{y,2}}.
    {move,{x,5},{y,3}}.
    {move,{x,4},{y,4}}.
    {move,{x,3},{y,5}}.
    {move,{x,2},{y,6}}.
    {move,{x,1},{y,7}}.
    {move,{x,0},{y,8}}.
    {call,8,{f,215}}.
    {test,is_nil,{f,208},[{x,0}]}.
    {move,{y,4},{x,4}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,5}}.
    {move,{y,6},{x,2}}.
    {move,{y,2},{x,6}}.
    {move,{y,7},{x,1}}.
    {move,{y,1},{x,7}}.
    {move,{y,8},{x,0}}.
    {call_last,8,{f,207},9}.
  {label,208}.
    {move,{x,0},{y,0}}.
    {call,1,{f,211}}.
    {test,is_tuple,{f,209},[{x,0}]}.
    {test,test_arity,{f,209},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,209},[{x,1},{atom,ok}]}.
    {move,{y,8},{x,0}}.
    {move,{x,2},{y,8}}.
    {trim,8,1}.
    {call,1,{f,300}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,209}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,0}}.
    {kill,{y,3}}.
    {trim,1,8}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,3},{x,4}}.
    {move,{y,4},{x,3}}.
    {move,{x,0},{x,5}}.
    {move,{y,5},{x,2}}.
    {move,{y,1},{x,6}}.
    {move,{y,6},{x,1}}.
    {move,{y,0},{x,7}}.
    {move,{y,7},{x,0}}.
    {call_last,8,{f,207},8}.


{function, connect_master, 1, 211}.
  {label,210}.
    {func_info,{atom,erl_prim_loader},{atom,connect_master},1}.
  {label,211}.
    {test,is_nonempty_list,{f,213},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_tuple,{f,210},[{x,1}]}.
    {test,test_arity,{f,210},[{x,1},3]}.
    {allocate,1,3}.
    {get_tuple_element,{x,1},1,{x,3}}.
    {get_tuple_element,{x,1},2,{x,4}}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{integer,0},{x,0}}.
    {call,3,{f,290}}.
    {test,is_tuple,{f,212},[{x,0}]}.
    {test,test_arity,{f,212},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,212},[{x,1},{atom,ok}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,2}}.
    {deallocate,1}.
    return.
  {label,212}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,211},1}.
  {label,213}.
    {test,is_nil,{f,210},[{x,0}]}.
    {move,{literal,{error,ebusy}},{x,0}}.
    return.


{function, find_loop, 8, 215}.
  {label,214}.
    {func_info,{atom,erl_prim_loader},{atom,find_loop},8}.
  {label,215}.
    {allocate,8,8}.
    {move,{x,4},{y,3}}.
    {move,nil,{x,4}}.
    {move,{x,7},{y,0}}.
    {move,{x,6},{y,1}}.
    {move,{x,5},{y,2}}.
    {move,{x,3},{y,4}}.
    {move,{x,2},{y,5}}.
    {move,{x,1},{y,6}}.
    {move,{x,0},{y,7}}.
    {call,5,{f,220}}.
    {test,is_nil,{f,218},[{x,0}]}.
    {move,{literal,{erl_prim_loader,'no server found'}},{x,0}}.
    {call_ext,1,{extfunc,erlang,display,1}}.
    {test,is_lt,{f,216},[{integer,0},{y,1}]}.
    {move,{y,3},{x,0}}.
    {call,1,{f,233}}.
    {gc_bif,'-',{f,0},0,[{y,1},{integer,1}],{x,0}}.
    {jump,{f,217}}.
  {label,216}.
    {kill,{y,1}}.
    {move,{y,0},{x,0}}.
    {call,1,{f,233}}.
    {move,{integer,0},{x,0}}.
  {label,217}.
    {move,{y,3},{x,4}}.
    {move,{y,4},{x,3}}.
    {move,{y,2},{x,5}}.
    {move,{y,5},{x,2}}.
    {move,{x,0},{x,6}}.
    {move,{y,6},{x,1}}.
    {move,{y,0},{x,7}}.
    {move,{y,7},{x,0}}.
    {call_last,8,{f,215},8}.
  {label,218}.
    {move,{y,2},{x,1}}.
    {trim,8,0}.
    {call_ext,2,{extfunc,erlang,'--',2}}.
    {move,{x,0},{x,1}}.
    {move,{integer,1},{x,0}}.
    {call_last,2,{f,419},0}.


{function, find_loop, 5, 220}.
  {label,219}.
    {func_info,{atom,erl_prim_loader},{atom,find_loop},5}.
  {label,220}.
    {test,is_eq_exact,{f,221},[{x,1},{integer,0}]}.
    {move,{x,4},{x,0}}.
    return.
  {label,221}.
    {allocate,5,5}.
    {move,{x,0},{y,4}}.
    {move,{atom,version},{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,3}}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {test_heap,4,1}.
    {put_list,{x,0},nil,{x,3}}.
    {put_list,{literal,"EBOOTQ"},{x,3},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,4},{x,0}}.
    {call,3,{f,394}}.
    {gc_bif,'-',{f,0},0,[{y,0},{integer,1}],{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,1},{x,4}}.
    {move,{y,4},{x,0}}.
    {call_last,5,{f,223},5}.


{function, find_collect, 5, 223}.
  {label,222}.
    {func_info,{atom,erl_prim_loader},{atom,find_collect},5}.
  {label,223}.
    {allocate,6,5}.
    {init,{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{x,0},{y,5}}.
  {label,224}.
    {loop_rec,{f,228},{x,0}}.
    {test,is_tuple,{f,227},[{x,0}]}.
    {test,test_arity,{f,227},[{x,0},5]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {get_tuple_element,{x,0},4,{x,4}}.
    {test,is_eq_exact,{f,227},[{x,1},{atom,udp}]}.
    {test,is_nonempty_list,{f,227},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_eq_exact,{f,227},[{x,5},{integer,69}]}.
    {test,is_nonempty_list,{f,227},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_eq_exact,{f,227},[{x,7},{integer,66}]}.
    {test,is_nonempty_list,{f,227},[{x,8}]}.
    {get_list,{x,8},{x,9},{x,10}}.
    {test,is_eq_exact,{f,227},[{x,9},{integer,79}]}.
    {test,is_nonempty_list,{f,227},[{x,10}]}.
    {get_list,{x,10},{x,11},{x,12}}.
    {test,is_eq_exact,{f,227},[{x,11},{integer,79}]}.
    {test,is_nonempty_list,{f,227},[{x,12}]}.
    {get_list,{x,12},{x,13},{x,14}}.
    {test,is_eq_exact,{f,227},[{x,13},{integer,84}]}.
    {test,is_nonempty_list,{f,227},[{x,14}]}.
    {get_list,{x,14},{x,15},{x,16}}.
    {test,is_eq_exact,{f,227},[{x,15},{integer,82}]}.
    {test,is_nonempty_list,{f,227},[{x,16}]}.
    {get_list,{x,16},{x,17},{x,18}}.
    {test,is_nonempty_list,{f,227},[{x,18}]}.
    {get_list,{x,18},{x,19},{x,20}}.
    {test,is_nonempty_list,{f,227},[{x,20}]}.
    {get_list,{x,20},{x,21},{x,22}}.
    {test,is_eq_exact,{f,227},[{x,2},{y,5}]}.
    remove_message.
    {gc_bif,'*',{f,0},22,[{x,19},{integer,256}],{x,0}}.
    {gc_bif,'+',{f,0},22,[{x,0},{x,21}],{x,0}}.
    {test_heap,4,22}.
    {put_tuple,3,{x,2}}.
    {put,{x,17}}.
    {put,{x,3}}.
    {put,{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{y,1},{x,1}}.
    {move,{x,2},{x,0}}.
    {call,2,{f,402}}.
    {test,is_atom,{f,231},[{x,0}]}.
    {select_val,{x,0},
                {f,231},
                {list,[{atom,false},{f,225},{atom,true},{f,226}]}}.
  {label,225}.
    {test_heap,2,0}.
    {put_list,{y,0},{y,1},{x,4}}.
    {move,{y,3},{x,2}}.
    {move,{y,4},{x,1}}.
    {move,{y,2},{x,3}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,223},6}.
  {label,226}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,4}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,223},6}.
  {label,227}.
    remove_message.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,4}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,223},6}.
  {label,228}.
    {wait_timeout,{f,224},{y,2}}.
    timeout.
    {move,{integer,1},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{integer,0},{x,0}}.
    {call,3,{f,415}}.
    {test,is_atom,{f,231},[{x,0}]}.
    {select_val,{x,0},
                {f,231},
                {list,[{atom,true},{f,229},{atom,false},{f,230}]}}.
  {label,229}.
    {move,{y,1},{x,0}}.
    {deallocate,6}.
    return.
  {label,230}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,4}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,220},6}.
  {label,231}.
    {case_end,{x,0}}.


{function, sleep, 1, 233}.
  {label,232}.
    {func_info,{atom,erl_prim_loader},{atom,sleep},1}.
  {label,233}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
  {label,234}.
    {wait_timeout,{f,234},{y,0}}.
    timeout.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.


{function, inet_exit_port, 3, 236}.
  {label,235}.
    {func_info,{atom,erl_prim_loader},{atom,inet_exit_port},3}.
  {label,236}.
    {test,is_tuple,{f,237},[{x,0}]}.
    {test,test_arity,{f,237},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1023}}.
    {test,is_eq_exact,{f,237},[{x,1023},{atom,state}]}.
    {get_tuple_element,{x,0},4,{x,2}}.
    {test,is_eq_exact,{f,237},[{x,2},{x,1}]}.
    {allocate,0,1}.
    {test,is_tuple,{f,238},[{x,0}]}.
    {test,test_arity,{f,238},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,238},[{x,1},{atom,state}]}.
    {move,{x,0},{x,1}}.
    {move,{atom,infinity},{x,2}}.
    {move,{integer,6},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{atom,noport},{x,0},4}.
    {deallocate,0}.
    return.
  {label,237}.
    return.
  {label,238}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},0}.


{function, inet_timeout_handler, 2, 240}.
  {label,239}.
    {func_info,{atom,erl_prim_loader},{atom,inet_timeout_handler},2}.
  {label,240}.
    {test,is_tuple,{f,242},[{x,0}]}.
    {test,test_arity,{f,242},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},4,{x,2}}.
    {test,is_eq_exact,{f,242},[{x,1},{atom,state}]}.
    {allocate,1,3}.
    {move,{x,0},{y,0}}.
    {test,is_port,{f,241},[{x,2}]}.
    {move,{x,2},{x,0}}.
    {call,1,{f,300}}.
  {label,241}.
    {move,{y,0},{x,1}}.
    {move,{atom,infinity},{x,2}}.
    {trim,1,0}.
    {move,{integer,6},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{atom,noport},{x,0},4}.
    {deallocate,0}.
    return.
  {label,242}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,error,1}}.


{function, inet_get_file_from_port, 3, 244}.
  {label,243}.
    {func_info,{atom,erl_prim_loader},{atom,inet_get_file_from_port},3}.
  {label,244}.
    {allocate,3,3}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{y,1}}.
    {call,1,{f,387}}.
    {test,is_atom,{f,248},[{x,0}]}.
    {select_val,{x,0},
                {f,248},
                {list,[{atom,true},{f,245},{atom,false},{f,247}]}}.
  {label,245}.
    {test,is_eq_exact,{f,246},[{y,0},nil]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,get}}.
    {put,{y,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,1}}.
    {call_last,3,{f,255},3}.
  {label,246}.
    {move,{y,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,250},3}.
  {label,247}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,get}}.
    {put,{y,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,1}}.
    {call_last,3,{f,255},3}.
  {label,248}.
    {case_end,{x,0}}.


{function, inet_get_file_from_port1, 3, 250}.
  {label,249}.
    {func_info,{atom,erl_prim_loader},{atom,inet_get_file_from_port1},3}.
  {label,250}.
    {test,is_nonempty_list,{f,253},[{x,1}]}.
    {allocate_heap,3,6,3}.
    {get_list,{x,1},{x,3},{y,0}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_list,{y,1},nil,{x,0}}.
    {put_list,{literal,"/"},{x,0},{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    {call,1,{f,397}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,3}}.
    {put,{atom,get}}.
    {put,{x,0}}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {kill,{y,2}}.
    {move,{x,3},{x,0}}.
    {call,3,{f,255}}.
    {test,is_tuple,{f,252},[{x,0}]}.
    {test,test_arity,{f,252},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,252},[{x,1}]}.
    {test,test_arity,{f,252},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_eq_exact,{f,252},[{x,3},{atom,error}]}.
    {test,is_nil,{f,251},[{y,0}]}.
    {test_heap,6,5}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,4}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {deallocate,3}.
    return.
  {label,251}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,250},3}.
  {label,252}.
    {deallocate,3}.
    return.
  {label,253}.
    {test,is_nil,{f,249},[{x,1}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{literal,{error,file_not_found}}}.
    {put,{x,2}}.
    return.


{function, inet_send_and_rcv, 3, 255}.
  {label,254}.
    {func_info,{atom,erl_prim_loader},{atom,inet_send_and_rcv},3}.
  {label,255}.
    {test,is_tuple,{f,254},[{x,2}]}.
    {test,test_arity,{f,256},[{x,2},9]}.
    {get_tuple_element,{x,2},0,{x,1023}}.
    {test,is_eq_exact,{f,256},[{x,1023},{atom,state}]}.
    {get_tuple_element,{x,2},4,{x,3}}.
    {test,is_eq_exact,{f,256},[{x,3},{atom,noport}]}.
    {allocate_zero,3,3}.
    {test,is_tuple,{f,272},[{x,2}]}.
    {test,test_arity,{f,272},[{x,2},9]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},2,{x,4}}.
    {test,is_eq_exact,{f,272},[{x,3},{atom,state}]}.
    {move,{x,0},{y,2}}.
    {move,{x,4},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {call,1,{f,202}}.
    {test,is_tuple,{f,271},[{x,0}]}.
    {test,test_arity,{f,271},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,271},[{x,1},{atom,ok}]}.
    {move,{x,2},{x,3}}.
    {move,{y,0},{x,1}}.
    {move,{integer,60000},{x,2}}.
    {move,{integer,6},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {set_tuple_element,{y,0},{x,0},4}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,255},3}.
  {label,256}.
    {test,is_tuple,{f,254},[{x,2}]}.
    {test,test_arity,{f,254},[{x,2},9]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},4,{x,4}}.
    {get_tuple_element,{x,2},5,{x,5}}.
    {test,is_eq_exact,{f,254},[{x,3},{atom,state}]}.
    {allocate,5,6}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,5},{y,3}}.
    {move,{x,4},{y,4}}.
    {call_ext,1,{extfunc,erlang,term_to_binary,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,4},{x,0}}.
    {call_ext,2,{extfunc,prim_inet,send,2}}.
  {label,257}.
    {loop_rec,{f,270},{x,0}}.
    {test,is_tuple,{f,269},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,269},{list,[2,{f,258},3,{f,259}]}}.
  {label,258}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,269},[{x,1},{atom,tcp_closed}]}.
    {test,is_eq_exact,{f,269},[{x,2},{y,4}]}.
    remove_message.
    {move,{y,0},{x,1}}.
    {move,{atom,noport},{x,2}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {trim,1,4}.
    {move,{integer,5},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,255},4}.
  {label,259}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_atom,{f,269},[{x,1}]}.
    {select_val,{x,1},
                {f,269},
                {list,[{atom,'EXIT'},
                       {f,260},
                       {atom,tcp_error},
                       {f,261},
                       {atom,tcp},
                       {f,262}]}}.
  {label,260}.
    {test,is_eq_exact,{f,269},[{x,2},{y,4}]}.
    remove_message.
    {move,{y,0},{x,1}}.
    {move,{atom,noport},{x,2}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {trim,1,4}.
    {move,{integer,5},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,255},4}.
  {label,261}.
    {test,is_eq_exact,{f,269},[{x,2},{y,4}]}.
    remove_message.
    {move,{y,0},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {trim,1,4}.
    {call,1,{f,282}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,255},4}.
  {label,262}.
    {test,is_eq_exact,{f,269},[{x,2},{y,4}]}.
    remove_message.
    {'catch',{y,4},{f,263}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {move,{x,3},{x,0}}.
    {call_ext,1,{extfunc,erlang,binary_to_term,1}}.
  {label,263}.
    {catch_end,{y,4}}.
    {test,is_tuple,{f,273},[{x,0}]}.
    {test,test_arity,{f,273},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,264},[{x,1},{atom,get}]}.
    {test,is_tuple,{f,267},[{x,2}]}.
    {test,test_arity,{f,264},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {test,is_eq_exact,{f,264},[{x,3},{atom,ok}]}.
    {test_heap,7,5}.
    {put_tuple,3,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,4}}.
    {put,{y,1}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,5}.
    return.
  {label,264}.
    {test,is_tuple,{f,267},[{x,2}]}.
    {test,test_arity,{f,267},[{x,2},2]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},1,{x,4}}.
    {test,is_atom,{f,267},[{x,3}]}.
    {select_val,{x,3},{f,267},{list,[{atom,error},{f,265},{atom,ok},{f,266}]}}.
  {label,265}.
    {test_heap,6,5}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,4}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,5}.
    return.
  {label,266}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{x,2}}.
    {put,{y,0}}.
    {deallocate,5}.
    return.
  {label,267}.
    {test,is_atom,{f,273},[{x,1}]}.
    {select_val,{x,1},
                {f,273},
                {list,[{atom,'EXIT'},{f,268},{atom,error},{f,268}]}}.
  {label,268}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,5}.
    return.
  {label,269}.
    {loop_rec_end,{f,257}}.
  {label,270}.
    {wait_timeout,{f,257},{y,3}}.
    timeout.
    {move,{y,0},{x,0}}.
    {kill,{y,3}}.
    {kill,{y,4}}.
    {trim,1,4}.
    {call,1,{f,282}}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,255},4}.
  {label,271}.
    {badmatch,{x,0}}.
  {label,272}.
    {move,{literal,{badrecord,state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.
  {label,273}.
    {case_end,{x,0}}.


{function, inet_list_dir, 2, 275}.
  {label,274}.
    {func_info,{atom,erl_prim_loader},{atom,inet_list_dir},2}.
  {label,275}.
    {test_heap,3,2}.
    {put_tuple,2,{x,3}}.
    {put,{atom,list_dir}}.
    {put,{x,1}}.
    {move,{atom,list_dir},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,255}}.


{function, inet_read_file_info, 2, 277}.
  {label,276}.
    {func_info,{atom,erl_prim_loader},{atom,inet_read_file_info},2}.
  {label,277}.
    {test_heap,3,2}.
    {put_tuple,2,{x,3}}.
    {put,{atom,read_file_info}}.
    {put,{x,1}}.
    {move,{atom,read_file_info},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,255}}.


{function, inet_get_cwd, 2, 279}.
  {label,278}.
    {func_info,{atom,erl_prim_loader},{atom,inet_get_cwd},2}.
  {label,279}.
    {test,is_nonempty_list,{f,280},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nil,{f,278},[{x,3}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,3}}.
    {put,{atom,get_cwd}}.
    {put,{x,2}}.
    {move,{atom,get_cwd},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,255}}.
  {label,280}.
    {test,is_nil,{f,278},[{x,1}]}.
    {move,{atom,get_cwd},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{atom,get_cwd},{x,0}}.
    {call_only,3,{f,255}}.


{function, inet_stop_port, 1, 282}.
  {label,281}.
    {func_info,{atom,erl_prim_loader},{atom,inet_stop_port},1}.
  {label,282}.
    {test,is_tuple,{f,281},[{x,0}]}.
    {test,test_arity,{f,281},[{x,0},9]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},4,{x,2}}.
    {test,is_eq_exact,{f,281},[{x,1},{atom,state}]}.
    {allocate,1,3}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_inet,close,1}}.
    {move,{y,0},{x,1}}.
    {move,{atom,noport},{x,2}}.
    {move,{integer,5},{x,0}}.
    {call_ext_last,3,{extfunc,erlang,setelement,3},1}.


{function, tcp_options, 0, 284}.
  {label,283}.
    {func_info,{atom,erl_prim_loader},{atom,tcp_options},0}.
  {label,284}.
    {move,{literal,[{mode,binary},{packet,4},{active,true},{deliver,term}]},
          {x,0}}.
    return.


{function, tcp_timeout, 0, 286}.
  {label,285}.
    {func_info,{atom,erl_prim_loader},{atom,tcp_timeout},0}.
  {label,286}.
    {move,{integer,15000},{x,0}}.
    return.


{function, udp_options, 0, 288}.
  {label,287}.
    {func_info,{atom,erl_prim_loader},{atom,udp_options},0}.
  {label,288}.
    {move,{literal,[{mode,list},
                    {active,true},
                    {deliver,term},
                    {broadcast,true}]},
          {x,0}}.
    return.


{function, ll_tcp_connect, 3, 290}.
  {label,289}.
    {func_info,{atom,erl_prim_loader},{atom,ll_tcp_connect},3}.
  {label,290}.
    {allocate,3,3}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {call,0,{f,284}}.
    {move,{x,0},{x,2}}.
    {move,{literal,{0,0,0,0}},{x,3}}.
    {move,{atom,inet},{x,1}}.
    {move,{y,0},{x,4}}.
    {kill,{y,0}}.
    {move,{atom,tcp},{x,0}}.
    {call,5,{f,296}}.
    {test,is_tuple,{f,292},[{x,0}]}.
    {test,test_arity,{f,292},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,292},[{x,1},{atom,ok}]}.
    {move,{x,2},{y,0}}.
    {call,0,{f,286}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{x,0},{x,3}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {move,{y,0},{x,0}}.
    {call_ext,4,{extfunc,prim_inet,connect,4}}.
    {test,is_eq_exact,{f,291},[{x,0},{atom,ok}]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,0}}.
    {deallocate,3}.
    return.
  {label,291}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,302},3}.
  {label,292}.
    {deallocate,3}.
    return.


{function, ll_udp_open, 1, 294}.
  {label,293}.
    {func_info,{atom,erl_prim_loader},{atom,ll_udp_open},1}.
  {label,294}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {call,0,{f,288}}.
    {move,{x,0},{x,2}}.
    {move,{literal,{0,0,0,0}},{x,3}}.
    {move,{atom,inet},{x,1}}.
    {move,{y,0},{x,4}}.
    {move,{atom,udp},{x,0}}.
    {call_last,5,{f,296},1}.


{function, ll_open_set_bind, 5, 296}.
  {label,295}.
    {func_info,{atom,erl_prim_loader},{atom,ll_open_set_bind},5}.
  {label,296}.
    {allocate,3,5}.
    {move,{x,4},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {call_ext,2,{extfunc,prim_inet,open,2}}.
    {test,is_tuple,{f,298},[{x,0}]}.
    {test,test_arity,{f,298},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,298},[{x,1},{atom,ok}]}.
    {move,{y,2},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,2}}.
    {call_ext,2,{extfunc,prim_inet,setopts,2}}.
    {test,is_eq_exact,{f,297},[{x,0},{atom,ok}]}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,2}}.
    {kill,{y,0}}.
    {kill,{y,1}}.
    {move,{y,2},{x,0}}.
    {call_ext,3,{extfunc,prim_inet,bind,3}}.
    {test,is_tuple,{f,297},[{x,0}]}.
    {test,test_arity,{f,297},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,297},[{x,1},{atom,ok}]}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{y,2}}.
    {deallocate,3}.
    return.
  {label,297}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,2,{f,302},3}.
  {label,298}.
    {deallocate,3}.
    return.


{function, ll_close, 1, 300}.
  {label,299}.
    {func_info,{atom,erl_prim_loader},{atom,ll_close},1}.
  {label,300}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {call_ext,1,{extfunc,erlang,unlink,1}}.
    {move,{atom,kill},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,erlang,exit,2},1}.


{function, port_error, 2, 302}.
  {label,301}.
    {func_info,{atom,erl_prim_loader},{atom,port_error},2}.
  {label,302}.
    {allocate,2,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{y,1}}.
    {call_ext,1,{extfunc,erlang,unlink,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,1}.
    {call_ext,1,{extfunc,prim_inet,close,1}}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.


{function, prim_init, 0, 304}.
  {label,303}.
    {func_info,{atom,erl_prim_loader},{atom,prim_init},0}.
  {label,304}.
    {allocate,0,0}.
    {move,{atom,loader_debug},{x,0}}.
    {call_ext,1,{extfunc,init,get_argument,1}}.
    {test,is_tuple,{f,305},[{x,0}]}.
    {test,test_arity,{f,307},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,307},[{x,1},{atom,ok}]}.
    {move,{atom,true},{x,0}}.
    {jump,{f,306}}.
  {label,305}.
    {test,is_eq_exact,{f,307},[{x,0},{atom,error}]}.
    {move,{atom,false},{x,0}}.
  {label,306}.
    {test_heap,5,1}.
    {put_tuple,4,{x,1}}.
    {put,{atom,prim_state}}.
    {put,{x,0}}.
    {put,{atom,undefined}}.
    {put,{atom,undefined}}.
    {move,{x,1},{x,0}}.
    {call_last,1,{f,380},0}.
  {label,307}.
    {case_end,{x,0}}.


{function, prim_release_archives, 1, 309}.
  {label,308}.
    {func_info,{atom,erl_prim_loader},{atom,prim_release_archives},1}.
  {label,309}.
    {allocate_zero,2,1}.
    {move,{atom,release_archives},{x,1}}.
    {move,{x,0},{y,1}}.
    {call,2,{f,2}}.
    {call_ext,0,{extfunc,erlang,get,0}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call,3,{f,312}}.
    {test,is_tuple,{f,310},[{x,0}]}.
    {test,test_arity,{f,310},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{y,0}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,2},{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,0}}.
    {move,{x,2},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,310}.
    {badmatch,{x,0}}.


{function, prim_do_release_archives, 3, 312}.
  {label,311}.
    {func_info,{atom,erl_prim_loader},{atom,prim_do_release_archives},3}.
  {label,312}.
    {test,is_nonempty_list,{f,315},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_tuple,{f,311},[{x,3}]}.
    {test,test_arity,{f,311},[{x,3},2]}.
    {allocate,5,5}.
    {init,{y,0}}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,4},{y,3}}.
    {move,{x,5},{y,4}}.
    {test,is_tuple,{f,317},[{x,6}]}.
    {test,test_arity,{f,317},[{x,6},2]}.
    {get_tuple_element,{x,6},0,{x,1}}.
    {get_tuple_element,{x,6},1,{x,3}}.
    {test,is_ne_exact,{f,314},[{x,1},{atom,primary}]}.
    {test_heap,4,6}.
    {move,{x,3},{y,0}}.
    {put_tuple,3,{x,1}}.
    {put,{atom,release}}.
    {put,{atom,cache}}.
    {put,{x,5}}.
    {call,2,{f,2}}.
    {move,{y,4},{x,0}}.
    {call_ext,1,{extfunc,erlang,erase,1}}.
    {move,{y,0},{x,1}}.
    {kill,{y,0}}.
    {move,{y,4},{x,0}}.
    {call,2,{f,382}}.
    {test,is_tuple,{f,313},[{x,0}]}.
    {test,test_arity,{f,318},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,318},[{x,1},{atom,error}]}.
    {test_heap,5,3}.
    {put_tuple,2,{x,3}}.
    {put,{y,4}}.
    {put,{x,2}}.
    {put_list,{x,3},{y,1},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,312},5}.
  {label,313}.
    {test,is_eq_exact,{f,318},[{x,0},{atom,ok}]}.
  {label,314}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,312},5}.
  {label,315}.
    {test,is_nil,{f,311},[{x,1}]}.
    {test,is_nil,{f,316},[{x,2}]}.
    {allocate,0,1}.
    {test,is_tuple,{f,319},[{x,0}]}.
    {test,test_arity,{f,319},[{x,0},4]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,319},[{x,1},{atom,prim_state}]}.
    {move,{x,0},{x,1}}.
    {move,{atom,undefined},{x,2}}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,316}.
    {allocate_zero,1,3}.
    {test,is_tuple,{f,320},[{x,0}]}.
    {test,test_arity,{f,320},[{x,0},4]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,320},[{x,1},{atom,prim_state}]}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{atom,undefined},{x,2}}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,0}}.
    {deallocate,1}.
    return.
  {label,317}.
    {case_end,{x,6}}.
  {label,318}.
    {case_end,{x,0}}.
  {label,319}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},0}.
  {label,320}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},1}.


{function, prim_set_primary_archive, 3, 322}.
  {label,321}.
    {func_info,{atom,erl_prim_loader},{atom,prim_set_primary_archive},3}.
  {label,322}.
    {test,is_eq_exact,{f,324},[{x,1},{atom,undefined}]}.
    {test,is_eq_exact,{f,324},[{x,2},{atom,undefined}]}.
    {allocate,1,1}.
    {move,{literal,{set_primary_archive,clean}},{x,1}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,2}}.
    {test,is_tuple,{f,328},[{y,0}]}.
    {test,test_arity,{f,328},[{y,0},4]}.
    {get_tuple_element,{y,0},0,{x,0}}.
    {get_tuple_element,{y,0},3,{x,1}}.
    {test,is_eq_exact,{f,328},[{x,0},{atom,prim_state}]}.
    {test,is_eq_exact,{f,323},[{x,1},{atom,undefined}]}.
    {move,{literal,{return,{error,enoent}}},{x,1}}.
    {move,{y,0},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{literal,{error,enoent}}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,323}.
    {move,{x,1},{x,0}}.
    {call_ext,1,{extfunc,erlang,erase,1}}.
    {test,is_tuple,{f,329},[{x,0}]}.
    {test,test_arity,{f,329},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,329},[{x,1},{atom,primary}]}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_zip,close,1}}.
    {test,is_eq_exact,{f,329},[{x,0},{atom,ok}]}.
    {move,{y,0},{x,1}}.
    {move,{atom,undefined},{x,2}}.
    {kill,{y,0}}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{literal,{return,{ok,[]}}},{x,1}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{literal,{ok,[]}}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,324}.
    {test,is_list,{f,321},[{x,1}]}.
    {test,is_binary,{f,321},[{x,2}]}.
    {allocate_zero,4,3}.
    {gc_bif,byte_size,{f,0},3,[{x,2}],{x,3}}.
    {test_heap,4,4}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_tuple,3,{x,1}}.
    {put,{atom,set_primary_archive}}.
    {put,{y,2}}.
    {put,{x,3}}.
    {call,2,{f,2}}.
    {test,is_tuple,{f,330},[{y,1}]}.
    {test,test_arity,{f,330},[{y,1},4]}.
    {get_tuple_element,{y,1},0,{x,0}}.
    {get_tuple_element,{y,1},3,{x,1}}.
    {test,is_eq_exact,{f,330},[{x,0},{atom,prim_state}]}.
    {test,is_eq_exact,{f,326},[{x,1},{atom,undefined}]}.
    {make_fun2,{f,572},13,12673501,0}.
    {test_heap,5,1}.
    {put_list,{y,2},nil,{x,1}}.
    {put_tuple,2,{x,3}}.
    {put,{y,2}}.
    {put,{y,3}}.
    {move,{x,0},{x,2}}.
    {kill,{y,3}}.
    {move,{x,3},{x,0}}.
    {call,3,{f,376}}.
    {test,is_tuple,{f,325},[{x,0}]}.
    {test,test_arity,{f,325},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,325},[{x,1},{atom,ok}]}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,3}}.
    {call,1,{f,436}}.
    {test_heap,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,set_primary_archive}}.
    {put,{y,0}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,primary}}.
    {put,{y,3}}.
    {kill,{y,3}}.
    {move,{y,2},{x,0}}.
    {call_ext,2,{extfunc,erlang,put,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,2}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{y,0}}.
    {put_tuple,2,{x,2}}.
    {put,{x,1}}.
    {put,{x,0}}.
    {move,{x,2},{x,0}}.
    {jump,{f,327}}.
  {label,325}.
    {test_heap,3,1}.
    {move,{x,0},{y,3}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,set_primary_archive}}.
    {put,{y,3}}.
    {kill,{y,2}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,3}}.
    {put,{y,1}}.
    {jump,{f,327}}.
  {label,326}.
    {move,{x,1},{y,0}}.
    {move,{literal,{set_primary_archive,clean}},{x,1}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {call_ext,1,{extfunc,erlang,erase,1}}.
    {call_ext,1,{extfunc,prim_zip,close,1}}.
    {test,is_eq_exact,{f,329},[{x,0},{atom,ok}]}.
    {move,{y,1},{x,1}}.
    {move,{atom,undefined},{x,2}}.
    {kill,{y,1}}.
    {move,{integer,4},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,1}}.
    {kill,{y,2}}.
    {kill,{y,3}}.
    {call,3,{f,322}}.
  {label,327}.
    {test,is_tuple,{f,329},[{x,0}]}.
    {test,test_arity,{f,329},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{y,2}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,2},{y,3}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,2}}.
    {trim,2,2}.
    {move,{x,2},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,328}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},1}.
  {label,329}.
    {badmatch,{x,0}}.
  {label,330}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},4}.


{function, prim_get_file, 2, 332}.
  {label,331}.
    {func_info,{atom,erl_prim_loader},{atom,prim_get_file},2}.
  {label,332}.
    {allocate_heap,3,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,get_file}}.
    {put,{y,2}}.
    {call,2,{f,2}}.
    {test,is_tuple,{f,338},[{y,1}]}.
    {test,test_arity,{f,338},[{y,1},4]}.
    {get_tuple_element,{y,1},0,{x,0}}.
    {get_tuple_element,{y,1},3,{x,1}}.
    {test,is_eq_exact,{f,338},[{x,0},{atom,prim_state}]}.
    {move,{x,1},{x,0}}.
    {move,{y,2},{x,1}}.
    {kill,{y,2}}.
    {call,2,{f,447}}.
    {test,is_tuple,{f,336},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,336},{list,[2,{f,333},3,{f,334}]}}.
  {label,333}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,336},[{x,1},{atom,file}]}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_file,read_file,1}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,1}}.
    {move,{x,1},{x,0}}.
    {jump,{f,335}}.
  {label,334}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,336},[{x,1},{atom,archive}]}.
    {test_heap,4,4}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,0}}.
    {put_tuple,3,{x,1}}.
    {put,{atom,archive_get_file}}.
    {put,{x,2}}.
    {put,{x,3}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {move,{integer,47},{x,1}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {call,2,{f,441}}.
    {make_fun2,{f,569},14,11086051,1}.
    {move,{literal,{error,enoent}},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,3}}.
    {kill,{y,0}}.
    {move,{y,1},{x,0}}.
    {call,4,{f,365}}.
  {label,335}.
    {test,is_tuple,{f,337},[{x,0}]}.
    {test,test_arity,{f,337},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{y,0}}.
    {get_tuple_element,{x,0},1,{y,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,0}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {deallocate,3}.
    return.
  {label,336}.
    {case_end,{x,0}}.
  {label,337}.
    {badmatch,{x,0}}.
  {label,338}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.


{function, prim_list_dir, 2, 340}.
  {label,339}.
    {func_info,{atom,erl_prim_loader},{atom,prim_list_dir},2}.
  {label,340}.
    {allocate_heap,3,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,list_dir}}.
    {put,{y,2}}.
    {call,2,{f,2}}.
    {test,is_tuple,{f,349},[{y,1}]}.
    {test,test_arity,{f,349},[{y,1},4]}.
    {get_tuple_element,{y,1},0,{x,0}}.
    {get_tuple_element,{y,1},3,{x,1}}.
    {test,is_eq_exact,{f,349},[{x,0},{atom,prim_state}]}.
    {move,{x,1},{x,0}}.
    {move,{y,2},{x,1}}.
    {kill,{y,2}}.
    {call,2,{f,447}}.
    {test,is_tuple,{f,348},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,348},{list,[2,{f,341},3,{f,342}]}}.
  {label,341}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,348},[{x,1},{atom,file}]}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_file,list_dir,1}}.
    {move,{y,1},{x,1}}.
    {jump,{f,345}}.
  {label,342}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,348},[{x,1},{atom,archive}]}.
    {test_heap,4,4}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,0}}.
    {put_tuple,3,{x,1}}.
    {put,{atom,archive_list_dir}}.
    {put,{x,2}}.
    {put,{x,3}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {move,{integer,47},{x,1}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {call,2,{f,441}}.
    {make_fun2,{f,562},15,31841620,1}.
    {move,{literal,{error,[]}},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,3}}.
    {kill,{y,0}}.
    {move,{y,1},{x,0}}.
    {call,4,{f,365}}.
    {test,is_tuple,{f,347},[{x,0}]}.
    {test,test_arity,{f,347},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_tuple,{f,347},[{x,1}]}.
    {test,test_arity,{f,347},[{x,1},2]}.
    {get_tuple_element,{x,1},0,{x,3}}.
    {get_tuple_element,{x,1},1,{x,4}}.
    {test,is_atom,{f,346},[{x,3}]}.
    {select_val,{x,3},{f,346},{list,[{atom,ok},{f,343},{atom,error},{f,344}]}}.
  {label,343}.
    {test_heap,3,5}.
    {put_tuple,2,{x,0}}.
    {put,{atom,ok}}.
    {put,{x,4}}.
    {move,{x,2},{x,1}}.
    {jump,{f,345}}.
  {label,344}.
    {move,{x,2},{x,1}}.
    {move,{literal,{error,enotdir}},{x,0}}.
  {label,345}.
    {test_heap,3,2}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,0}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {deallocate,3}.
    return.
  {label,346}.
    {case_end,{x,3}}.
  {label,347}.
    {badmatch,{x,0}}.
  {label,348}.
    {case_end,{x,0}}.
  {label,349}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.


{function, prim_read_file_info, 2, 351}.
  {label,350}.
    {func_info,{atom,erl_prim_loader},{atom,prim_read_file_info},2}.
  {label,351}.
    {allocate_heap,3,3,2}.
    {init,{y,0}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,read_file_info}}.
    {put,{y,2}}.
    {call,2,{f,2}}.
    {test,is_tuple,{f,360},[{y,1}]}.
    {test,test_arity,{f,360},[{y,1},4]}.
    {get_tuple_element,{y,1},0,{x,0}}.
    {get_tuple_element,{y,1},3,{x,1}}.
    {test,is_eq_exact,{f,360},[{x,0},{atom,prim_state}]}.
    {move,{x,1},{x,0}}.
    {move,{y,2},{x,1}}.
    {call,2,{f,447}}.
    {test,is_tuple,{f,358},[{x,0}]}.
    {select_tuple_arity,{x,0},{f,358},{list,[2,{f,352},3,{f,353}]}}.
  {label,352}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,358},[{x,1},{atom,file}]}.
    {kill,{y,2}}.
    {move,{x,2},{x,0}}.
    {call_ext,1,{extfunc,prim_file,read_file_info,1}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,1}}.
    {move,{x,1},{x,0}}.
    {jump,{f,356}}.
  {label,353}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,358},[{x,1},{atom,archive}]}.
    {test,is_nil,{f,355},[{x,3}]}.
    {test_heap,3,3}.
    {move,{x,2},{y,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,archive_read_file_info}}.
    {put,{x,2}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {move,{y,2},{x,0}}.
    {kill,{y,2}}.
    {call_ext,1,{extfunc,prim_file,read_file_info,1}}.
    {test,is_tuple,{f,354},[{x,0}]}.
    {test,test_arity,{f,354},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,354},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,357},[{x,2}]}.
    {test,test_arity,{f,357},[{x,2},14]}.
    {get_tuple_element,{x,2},0,{x,0}}.
    {test,is_eq_exact,{f,357},[{x,0},{atom,file_info}]}.
    {move,{x,2},{x,1}}.
    {move,{atom,directory},{x,2}}.
    {move,{integer,3},{x,0}}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,1}}.
    {jump,{f,356}}.
  {label,354}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,1}}.
    {move,{x,1},{x,0}}.
    {jump,{f,356}}.
  {label,355}.
    {test_heap,3,4}.
    {move,{x,3},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,archive_read_file_info}}.
    {put,{y,2}}.
    {move,{x,2},{y,2}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {move,{integer,47},{x,1}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {call,2,{f,441}}.
    {make_fun2,{f,558},16,99263058,1}.
    {move,{literal,{error,enoent}},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{y,2},{x,3}}.
    {move,{y,1},{x,0}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {call,4,{f,365}}.
  {label,356}.
    {test,is_tuple,{f,359},[{x,0}]}.
    {test,test_arity,{f,359},[{x,0},2]}.
    {test_heap,3,1}.
    {get_tuple_element,{x,0},0,{y,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {move,{x,2},{y,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,1}}.
    {move,{x,2},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {deallocate,3}.
    return.
  {label,357}.
    {move,{literal,{badrecord,file_info}},{x,0}}.
    {call_ext,1,{extfunc,erlang,error,1}}.
  {label,358}.
    {case_end,{x,0}}.
  {label,359}.
    {badmatch,{x,0}}.
  {label,360}.
    {move,{literal,{badrecord,prim_state}},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},3}.


{function, prim_get_cwd, 2, 362}.
  {label,361}.
    {func_info,{atom,erl_prim_loader},{atom,prim_get_cwd},2}.
  {label,362}.
    {test,is_nonempty_list,{f,363},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nil,{f,361},[{x,3}]}.
    {allocate_heap,2,3,3}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,get_cwd}}.
    {put,{x,2}}.
    {call,2,{f,2}}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {call_ext,1,{extfunc,prim_file,get_cwd,1}}.
    {test_heap,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,0}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,363}.
    {test,is_nil,{f,361},[{x,1}]}.
    {allocate_zero,2,1}.
    {move,{literal,{get_cwd,[]}},{x,1}}.
    {move,{x,0},{y,1}}.
    {call,2,{f,2}}.
    {call_ext,0,{extfunc,prim_file,get_cwd,0}}.
    {test_heap,3,1}.
    {move,{x,0},{y,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,return}}.
    {put,{y,0}}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.


{function, apply_archive, 4, 365}.
  {label,364}.
    {func_info,{atom,erl_prim_loader},{atom,apply_archive},4}.
  {label,365}.
    {allocate_zero,6,4}.
    {bif,get,{f,0},[{x,3}],{x,4}}.
    {test,is_tuple,{f,371},[{x,4}]}.
    {test,test_arity,{f,374},[{x,4},2]}.
    {get_tuple_element,{x,4},0,{x,5}}.
    {get_tuple_element,{x,4},1,{x,6}}.
    {test,is_eq_exact,{f,367},[{x,5},{atom,primary}]}.
    {move,{x,0},{y,5}}.
    {move,{x,1},{x,4}}.
    {move,{x,2},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{x,6},{x,0}}.
    {call,3,{f,378}}.
    {test,is_tuple,{f,366},[{x,0}]}.
    {test,test_arity,{f,366},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {test,is_eq_exact,{f,366},[{x,1},{atom,ok}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{x,2}}.
    {put,{y,5}}.
    {deallocate,6}.
    return.
  {label,366}.
    {test_heap,3,1}.
    {move,{x,0},{y,4}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,primary}}.
    {put,{y,4}}.
    {move,{y,5},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,4}}.
    {put,{y,5}}.
    {deallocate,6}.
    return.
  {label,367}.
    {move,{x,0},{y,3}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,6},{y,4}}.
    {move,{x,5},{y,5}}.
    {call_ext,1,{extfunc,prim_file,read_file_info,1}}.
    {test,is_tuple,{f,370},[{x,0}]}.
    {test,test_arity,{f,370},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,370},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,370},[{x,2}]}.
    {test,test_arity,{f,370},[{x,2},14]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},5,{x,4}}.
    {test,is_eq_exact,{f,370},[{x,3},{atom,file_info}]}.
    {test,is_eq_exact,{f,370},[{x,4},{y,5}]}.
    {test,is_tuple,{f,369},[{y,4}]}.
    {test,test_arity,{f,369},[{y,4},2]}.
    {get_tuple_element,{y,4},0,{x,0}}.
    {get_tuple_element,{y,4},1,{x,1}}.
    {test,is_eq_exact,{f,369},[{x,0},{atom,ok}]}.
    {move,{y,2},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{y,1},{x,1}}.
    {kill,{y,1}}.
    {kill,{y,2}}.
    {call,3,{f,378}}.
    {test,is_tuple,{f,368},[{x,0}]}.
    {test,test_arity,{f,368},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {test,is_eq_exact,{f,368},[{x,1},{atom,ok}]}.
    {test_heap,3,3}.
    {put_tuple,2,{x,0}}.
    {put,{x,2}}.
    {put,{y,3}}.
    {deallocate,6}.
    return.
  {label,368}.
    {test_heap,6,1}.
    {move,{x,0},{y,2}}.
    {put_tuple,2,{x,2}}.
    {put,{atom,clear}}.
    {put,{y,2}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{x,2}}.
    {move,{y,3},{x,0}}.
    {call,2,{f,2}}.
    {move,{y,4},{x,1}}.
    {kill,{y,4}}.
    {move,{y,0},{x,0}}.
    {call,2,{f,382}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{y,2}}.
    {move,{y,3},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{y,5}}.
    {put,{y,2}}.
    {move,{y,0},{x,0}}.
    {kill,{y,5}}.
    {trim,2,4}.
    {call_ext,2,{extfunc,erlang,put,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,4}.
    return.
  {label,369}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{y,4}}.
    {move,{y,3},{x,0}}.
    {move,{y,3},{y,5}}.
    {trim,4,2}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,370}.
    {test_heap,6,1}.
    {put_tuple,2,{x,2}}.
    {put,{atom,clear}}.
    {put,{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{x,2}}.
    {kill,{y,5}}.
    {move,{y,3},{x,0}}.
    {call,2,{f,2}}.
    {move,{y,4},{x,1}}.
    {kill,{y,4}}.
    {move,{y,0},{x,0}}.
    {call,2,{f,382}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,365},6}.
  {label,371}.
    {test,is_eq_exact,{f,374},[{x,4},{atom,undefined}]}.
    {move,{x,0},{y,5}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {call_ext,1,{extfunc,prim_file,read_file_info,1}}.
    {test,is_tuple,{f,373},[{x,0}]}.
    {test,test_arity,{f,373},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,373},[{x,1},{atom,ok}]}.
    {test,is_tuple,{f,373},[{x,2}]}.
    {test,test_arity,{f,373},[{x,2},14]}.
    {get_tuple_element,{x,2},0,{x,3}}.
    {get_tuple_element,{x,2},5,{x,4}}.
    {test,is_eq_exact,{f,373},[{x,3},{atom,file_info}]}.
    {move,{y,3},{x,1}}.
    {move,{y,4},{x,2}}.
    {move,{y,2},{x,0}}.
    {move,{x,4},{y,4}}.
    {kill,{y,3}}.
    {call,3,{f,376}}.
    {test,is_tuple,{f,372},[{x,0}]}.
    {test,test_arity,{f,372},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {get_tuple_element,{x,0},2,{x,3}}.
    {test,is_eq_exact,{f,372},[{x,1},{atom,ok}]}.
    {move,{literal,{cache,ok}},{x,1}}.
    {move,{y,5},{x,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,3},{y,3}}.
    {call,2,{f,2}}.
    {test_heap,6,0}.
    {put_tuple,2,{x,2}}.
    {put,{atom,ok}}.
    {put,{y,1}}.
    {put_tuple,2,{x,1}}.
    {put,{y,4}}.
    {put,{x,2}}.
    {move,{y,2},{x,0}}.
    {move,{y,3},{y,4}}.
    {trim,4,2}.
    {call_ext,2,{extfunc,erlang,put,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,372}.
    {test_heap,3,1}.
    {move,{x,0},{y,3}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{y,3}}.
    {move,{y,5},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,1}}.
    {put,{y,4}}.
    {put,{y,3}}.
    {move,{y,2},{x,0}}.
    {kill,{y,4}}.
    {trim,3,3}.
    {call_ext,2,{extfunc,erlang,put,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,2}}.
    {deallocate,3}.
    return.
  {label,373}.
    {test_heap,3,1}.
    {move,{x,0},{y,4}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,cache}}.
    {put,{y,4}}.
    {trim,4,2}.
    {move,{y,1},{x,0}}.
    {call,2,{f,2}}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {deallocate,2}.
    return.
  {label,374}.
    {case_end,{x,4}}.


{function, open_archive, 3, 376}.
  {label,375}.
    {func_info,{atom,erl_prim_loader},{atom,open_archive},3}.
  {label,376}.
    {allocate,2,3}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {make_fun2,{f,555},17,91790143,1}.
    {move,{y,1},{x,2}}.
    {move,{y,0},{x,1}}.
    {call_ext_last,3,{extfunc,prim_zip,open,3},2}.


{function, foldl_archive, 3, 378}.
  {label,377}.
    {func_info,{atom,erl_prim_loader},{atom,foldl_archive},3}.
  {label,378}.
    {allocate,2,3}.
    {move,{x,0},{y,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {make_fun2,{f,552},18,87386555,1}.
    {move,{y,1},{x,2}}.
    {move,{y,0},{x,1}}.
    {call_ext_last,3,{extfunc,prim_zip,foldl,3},2}.


{function, cache_new, 1, 380}.
  {label,379}.
    {func_info,{atom,erl_prim_loader},{atom,cache_new},1}.
  {label,380}.
    return.


{function, clear_cache, 2, 382}.
  {label,381}.
    {func_info,{atom,erl_prim_loader},{atom,clear_cache},2}.
  {label,382}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {call_ext,1,{extfunc,erlang,erase,1}}.
    {test,is_tuple,{f,385},[{y,0}]}.
    {test,test_arity,{f,385},[{y,0},2]}.
    {get_tuple_element,{y,0},0,{x,0}}.
    {get_tuple_element,{y,0},1,{x,1}}.
    {test,is_atom,{f,385},[{x,0}]}.
    {select_val,{x,0},{f,385},{list,[{atom,ok},{f,383},{atom,error},{f,384}]}}.
  {label,383}.
    {move,{x,1},{x,0}}.
    {call_ext_last,1,{extfunc,prim_zip,close,1},1}.
  {label,384}.
    {move,{atom,ok},{x,0}}.
    {deallocate,1}.
    return.
  {label,385}.
    {case_end,{y,0}}.


{function, is_basename, 1, 387}.
  {label,386}.
    {func_info,{atom,erl_prim_loader},{atom,is_basename},1}.
  {label,387}.
    {allocate,1,1}.
    {move,{x,0},{x,1}}.
    {move,{integer,47},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,2,{f,406}}.
    {test,is_atom,{f,392},[{x,0}]}.
    {select_val,{x,0},
                {f,392},
                {list,[{atom,false},{f,388},{atom,true},{f,391}]}}.
  {label,388}.
    {move,{atom,os_type},{x,0}}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {test,is_tuple,{f,390},[{x,0}]}.
    {test,test_arity,{f,390},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,390},[{x,1},{atom,win32}]}.
    {test,is_nonempty_list,{f,389},[{y,0}]}.
    {get_list,{y,0},{x,0},{x,1}}.
    {test,is_nonempty_list,{f,389},[{x,1}]}.
    {get_list,{x,1},{x,0},{x,2}}.
    {test,is_eq_exact,{f,389},[{x,0},{integer,58}]}.
    {move,{atom,false},{x,0}}.
    {deallocate,1}.
    return.
  {label,389}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {move,{integer,92},{x,0}}.
    {call,2,{f,406}}.
    {bif,'not',{f,0},[{x,0}],{x,0}}.
    {deallocate,0}.
    return.
  {label,390}.
    {move,{atom,true},{x,0}}.
    {deallocate,1}.
    return.
  {label,391}.
    {move,{atom,false},{x,0}}.
    {deallocate,1}.
    return.
  {label,392}.
    {case_end,{x,0}}.


{function, send_all, 3, 394}.
  {label,393}.
    {func_info,{atom,erl_prim_loader},{atom,send_all},3}.
  {label,394}.
    {test,is_nonempty_list,{f,395},[{x,1}]}.
    {allocate,3,3}.
    {get_list,{x,1},{x,1},{y,2}}.
    {move,{x,2},{x,3}}.
    {move,{integer,4368},{x,2}}.
    {move,{x,3},{y,0}}.
    {move,{x,0},{y,1}}.
    {call_ext,4,{extfunc,prim_inet,sendto,4}}.
    {move,{y,2},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,394},3}.
  {label,395}.
    {test,is_nil,{f,393},[{x,1}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, concat, 1, 397}.
  {label,396}.
    {func_info,{atom,erl_prim_loader},{atom,concat},1}.
  {label,397}.
    {test,is_nonempty_list,{f,400},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_atom,{f,398},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,397}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,398}.
    {test,is_ge,{f,399},[{x,1},{integer,0}]}.
    {test,is_ge,{f,399},[{integer,255},{x,1}]}.
    {allocate,1,3}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,397}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,399}.
    {allocate,1,3}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,397}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,400}.
    {test,is_nil,{f,396},[{x,0}]}.
    return.


{function, member, 2, 402}.
  {label,401}.
    {func_info,{atom,erl_prim_loader},{atom,member},2}.
  {label,402}.
    {test,is_nonempty_list,{f,404},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_eq_exact,{f,403},[{x,2},{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,403}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,402}}.
  {label,404}.
    {test,is_nil,{f,401},[{x,1}]}.
    {move,{atom,false},{x,0}}.
    return.


{function, deep_member, 2, 406}.
  {label,405}.
    {func_info,{atom,erl_prim_loader},{atom,deep_member},2}.
  {label,406}.
    {test,is_nonempty_list,{f,412},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_eq_exact,{f,407},[{x,2},{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,407}.
    {test,is_list,{f,408},[{x,2}]}.
    {allocate,2,4}.
    {move,{x,2},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{x,3},{y,1}}.
    {call,2,{f,406}}.
    {test,is_atom,{f,413},[{x,0}]}.
    {select_val,{x,0},
                {f,413},
                {list,[{atom,false},{f,409},{atom,true},{f,410}]}}.
  {label,408}.
    {test,is_atom,{f,411},[{x,2}]}.
    {allocate,2,4}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call,2,{f,406}}.
    {test,is_atom,{f,413},[{x,0}]}.
    {select_val,{x,0},
                {f,413},
                {list,[{atom,false},{f,409},{atom,true},{f,410}]}}.
  {label,409}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,406},2}.
  {label,410}.
    {deallocate,2}.
    return.
  {label,411}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,406}}.
  {label,412}.
    {test,is_nil,{f,405},[{x,1}]}.
    {move,{atom,false},{x,0}}.
    return.
  {label,413}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,badarg}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {call_ext_last,1,{extfunc,erlang,error,1},2}.


{function, keymember, 3, 415}.
  {label,414}.
    {func_info,{atom,erl_prim_loader},{atom,keymember},3}.
  {label,415}.
    {test,is_nonempty_list,{f,417},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {bif,element,{f,416},[{x,1},{x,3}],{x,5}}.
    {test,is_eq_exact,{f,416},[{x,5},{x,0}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,416}.
    {move,{x,4},{x,2}}.
    {call_only,3,{f,415}}.
  {label,417}.
    {test,is_nil,{f,414},[{x,2}]}.
    {move,{atom,false},{x,0}}.
    return.


{function, keysort, 2, 419}.
  {label,418}.
    {func_info,{atom,erl_prim_loader},{atom,keysort},2}.
  {label,419}.
    {move,nil,{x,2}}.
    {call_only,3,{f,421}}.


{function, keysort, 3, 421}.
  {label,420}.
    {func_info,{atom,erl_prim_loader},{atom,keysort},3}.
  {label,421}.
    {test,is_nonempty_list,{f,422},[{x,1}]}.
    {allocate,2,3}.
    {get_list,{x,1},{x,3},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,3,{f,424}}.
    {move,{y,1},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,421},2}.
  {label,422}.
    {test,is_nil,{f,420},[{x,1}]}.
    {move,{x,2},{x,0}}.
    return.


{function, keyins, 3, 424}.
  {label,423}.
    {func_info,{atom,erl_prim_loader},{atom,keyins},3}.
  {label,424}.
    {test,is_nonempty_list,{f,426},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {bif,element,{f,425},[{x,1},{x,3}],{x,5}}.
    {test,is_lt,{f,425},[{x,0},{x,5}]}.
    {test_heap,4,5}.
    {put_list,{x,3},{x,4},{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    return.
  {label,425}.
    {allocate,1,5}.
    {move,{x,4},{x,2}}.
    {move,{x,3},{y,0}}.
    {call,3,{f,424}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,426}.
    {test,is_nil,{f,423},[{x,2}]}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,0}}.
    return.


{function, min, 2, 428}.
  {label,427}.
    {func_info,{atom,erl_prim_loader},{atom,min},2}.
  {label,428}.
    {test,is_lt,{f,429},[{x,0},{x,1}]}.
    return.
  {label,429}.
    {move,{x,1},{x,0}}.
    return.


{function, to_strs, 1, 431}.
  {label,430}.
    {func_info,{atom,erl_prim_loader},{atom,to_strs},1}.
  {label,431}.
    {test,is_nonempty_list,{f,434},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_atom,{f,432},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,431}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,432}.
    {test,is_list,{f,433},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,431}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,433}.
    {move,{x,2},{x,0}}.
    {call_only,1,{f,431}}.
  {label,434}.
    {test,is_nil,{f,430},[{x,0}]}.
    return.


{function, reverse, 1, 436}.
  {label,435}.
    {func_info,{atom,erl_prim_loader},{atom,reverse},1}.
  {label,436}.
    {test,is_nonempty_list,{f,439},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,438},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,437},[{x,4}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,437}.
    {test_heap,4,5}.
    {put_list,{x,1},nil,{x,2}}.
    {put_list,{x,3},{x,2},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,438}.
    {test,is_nil,{f,435},[{x,2}]}.
    return.
  {label,439}.
    {test,is_nil,{f,435},[{x,0}]}.
    return.


{function, funny_split, 2, 441}.
  {label,440}.
    {func_info,{atom,erl_prim_loader},{atom,funny_split},2}.
  {label,441}.
    {move,nil,{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,443}}.


{function, funny_split, 4, 443}.
  {label,442}.
    {func_info,{atom,erl_prim_loader},{atom,funny_split},4}.
  {label,443}.
    {test,is_nonempty_list,{f,445},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_eq_exact,{f,444},[{x,1},{x,4}]}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,3},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,443}}.
  {label,444}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,443}}.
  {label,445}.
    {test,is_nil,{f,442},[{x,0}]}.
    {test_heap,2,4}.
    {put_list,{x,2},{x,3},{x,0}}.
    return.


{function, name_split, 2, 447}.
  {label,446}.
    {func_info,{atom,erl_prim_loader},{atom,name_split},2}.
  {label,447}.
    {allocate,1,2}.
    {move,{x,0},{y,0}}.
    {move,{x,1},{x,0}}.
    {call,1,{f,487}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,449},1}.


{function, do_name_split, 2, 449}.
  {label,448}.
    {func_info,{atom,erl_prim_loader},{atom,do_name_split},2}.
  {label,449}.
    {test,is_eq_exact,{f,453},[{x,0},{atom,undefined}]}.
    {allocate,1,2}.
    {move,{x,1},{y,0}}.
    {call_ext,0,{extfunc,init,archive_extension,0}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,0},{x,0}}.
    {call,3,{f,462}}.
    {test,is_tuple,{f,451},[{x,0}]}.
    {test,test_arity,{f,456},[{x,0},4]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {get_tuple_element,{x,0},3,{x,3}}.
    {test,is_eq_exact,{f,456},[{x,1},{atom,split}]}.
    {test,is_nonempty_list,{f,450},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_eq_exact,{f,452},[{x,4},{integer,47}]}.
    {move,{x,2},{x,0}}.
    {move,{x,5},{y,0}}.
    {call,1,{f,436}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{atom,archive}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,450}.
    {test,is_nil,{f,452},[{x,3}]}.
    {trim,1,0}.
    {move,{x,2},{x,0}}.
    {call,1,{f,436}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{atom,archive}}.
    {put,{x,0}}.
    {put,nil}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,451}.
    {test,is_eq_exact,{f,456},[{x,0},{atom,no_split}]}.
  {label,452}.
    {test_heap,3,0}.
    {put_tuple,2,{x,0}}.
    {put,{atom,file}}.
    {put,{y,0}}.
    {deallocate,1}.
    return.
  {label,453}.
    {allocate_zero,2,2}.
    {move,{x,1},{y,1}}.
    {call,1,{f,487}}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,3,{f,458}}.
    {test,is_tuple,{f,455},[{x,0}]}.
    {test,test_arity,{f,456},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},2,{x,2}}.
    {test,is_eq_exact,{f,456},[{x,1},{atom,match}]}.
    {test,is_nonempty_list,{f,454},[{x,2}]}.
    {get_list,{x,2},{x,0},{x,1}}.
    {test,is_eq_exact,{f,454},[{x,0},{integer,47}]}.
    {test_heap,4,2}.
    {put_tuple,3,{x,0}}.
    {put,{atom,archive}}.
    {put,{y,0}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,454}.
    {test_heap,4,3}.
    {put_tuple,3,{x,0}}.
    {put,{atom,archive}}.
    {put,{y,0}}.
    {put,{x,2}}.
    {deallocate,2}.
    return.
  {label,455}.
    {test,is_eq_exact,{f,456},[{x,0},{atom,no_match}]}.
    {move,{y,1},{x,1}}.
    {move,{atom,undefined},{x,0}}.
    {call_last,2,{f,449},2}.
  {label,456}.
    {case_end,{x,0}}.


{function, string_match, 3, 458}.
  {label,457}.
    {func_info,{atom,erl_prim_loader},{atom,string_match},3}.
  {label,458}.
    {test,is_nonempty_list,{f,459},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,459},[{x,1}]}.
    {get_list,{x,1},{x,5},{x,6}}.
    {test,is_eq_exact,{f,459},[{x,5},{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,458}}.
  {label,459}.
    {test,is_nil,{f,460},[{x,1}]}.
    {test_heap,4,3}.
    {put_tuple,3,{x,1}}.
    {put,{atom,match}}.
    {put,{x,2}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    return.
  {label,460}.
    {move,{atom,no_match},{x,0}}.
    return.


{function, string_split, 3, 462}.
  {label,461}.
    {func_info,{atom,erl_prim_loader},{atom,string_split},3}.
  {label,462}.
    {test,is_nonempty_list,{f,464},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,463},[{x,1}]}.
    {get_list,{x,1},{x,5},{x,6}}.
    {test,is_eq_exact,{f,463},[{x,5},{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,3},{x,2},{x,3}}.
    {move,{x,1},{x,5}}.
    {move,{x,6},{x,1}}.
    {move,{x,3},{x,6}}.
    {move,{x,4},{x,0}}.
    {call_only,7,{f,466}}.
  {label,463}.
    {test_heap,2,5}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,462}}.
  {label,464}.
    {test,is_nil,{f,461},[{x,0}]}.
    {move,{atom,no_split},{x,0}}.
    return.


{function, string_split2, 7, 466}.
  {label,465}.
    {func_info,{atom,erl_prim_loader},{atom,string_split2},7}.
  {label,466}.
    {test,is_nonempty_list,{f,467},[{x,0}]}.
    {get_list,{x,0},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,467},[{x,1}]}.
    {get_list,{x,1},{x,9},{x,10}}.
    {test,is_eq_exact,{f,467},[{x,9},{x,7}]}.
    {test_heap,2,11}.
    {put_list,{x,7},{x,3},{x,3}}.
    {move,{x,10},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,7,{f,466}}.
  {label,467}.
    {test,is_nil,{f,468},[{x,1}]}.
    {test_heap,5,4}.
    {put_tuple,4,{x,1}}.
    {put,{atom,split}}.
    {put,{x,2}}.
    {put,{x,3}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    return.
  {label,468}.
    {move,{x,5},{x,1}}.
    {move,{x,6},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,462}}.


{function, ipv4_list, 1, 470}.
  {label,469}.
    {func_info,{atom,erl_prim_loader},{atom,ipv4_list},1}.
  {label,470}.
    {test,is_nonempty_list,{f,475},[{x,0}]}.
    {allocate,1,1}.
    {get_list,{x,0},{x,1},{y,0}}.
    {test,is_atom,{f,471},[{x,1}]}.
    {move,{x,1},{x,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {call,1,{f,477}}.
    {jump,{f,473}}.
  {label,471}.
    {test,is_list,{f,472},[{x,1}]}.
    {move,{x,1},{x,0}}.
    {call,1,{f,477}}.
    {jump,{f,473}}.
  {label,472}.
    {move,{literal,{error,einal}},{x,0}}.
  {label,473}.
    {test,is_tuple,{f,474},[{x,0}]}.
    {test,test_arity,{f,474},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,474},[{x,1},{atom,ok}]}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,0}}.
    {call,1,{f,470}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,474}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,470},1}.
  {label,475}.
    {test,is_nil,{f,469},[{x,0}]}.
    return.


{function, ipv4_address, 1, 477}.
  {label,476}.
    {func_info,{atom,erl_prim_loader},{atom,ipv4_address},1}.
  {label,477}.
    {allocate,1,1}.
    {'catch',{y,0},{f,478}}.
    {move,nil,{x,1}}.
    {call,2,{f,481}}.
  {label,478}.
    {catch_end,{y,0}}.
    {test,is_tuple,{f,479},[{x,0}]}.
    {test,test_arity,{f,479},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,479},[{x,1},{atom,'EXIT'}]}.
    {move,{literal,{error,einval}},{x,0}}.
    {deallocate,1}.
    return.
  {label,479}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.


{function, ipv4_addr, 2, 481}.
  {label,480}.
    {func_info,{atom,erl_prim_loader},{atom,ipv4_addr},2}.
  {label,481}.
    {test,is_nonempty_list,{f,480},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_ge,{f,480},[{x,2},{integer,48}]}.
    {test,is_ge,{f,480},[{integer,57},{x,2}]}.
    {gc_bif,'-',{f,0},4,[{x,2},{integer,48}],{x,0}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,483}}.


{function, ipv4_addr, 3, 483}.
  {label,482}.
    {func_info,{atom,erl_prim_loader},{atom,ipv4_addr},3}.
  {label,483}.
    {test,is_nonempty_list,{f,485},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_eq_exact,{f,484},[{x,3},{integer,46}]}.
    {test,is_lt,{f,484},[{x,1},{integer,256}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,2},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_only,2,{f,481}}.
  {label,484}.
    {test,is_ge,{f,482},[{x,3},{integer,48}]}.
    {test,is_ge,{f,482},[{integer,57},{x,3}]}.
    {gc_bif,'*',{f,0},5,[{x,1},{integer,10}],{x,0}}.
    {gc_bif,'-',{f,0},5,[{x,3},{integer,48}],{x,1}}.
    {gc_bif,'+',{f,0},5,[{x,0},{x,1}],{x,1}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,483}}.
  {label,485}.
    {test,is_nil,{f,482},[{x,0}]}.
    {test,is_nonempty_list,{f,482},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,482},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,482},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_nil,{f,482},[{x,8}]}.
    {test,is_lt,{f,482},[{x,1},{integer,256}]}.
    {test_heap,5,8}.
    {put_tuple,4,{x,0}}.
    {put,{x,7}}.
    {put,{x,5}}.
    {put,{x,3}}.
    {put,{x,1}}.
    return.


{function, absname, 1, 487}.
  {label,486}.
    {func_info,{atom,erl_prim_loader},{atom,absname},1}.
  {label,487}.
    {allocate_zero,1,1}.
    {move,nil,{x,1}}.
    {call,2,{f,541}}.
    {move,{x,0},{y,0}}.
    {call,1,{f,502}}.
    {test,is_atom,{f,493},[{x,0}]}.
    {select_val,{x,0},
                {f,493},
                {list,[{atom,absolute},
                       {f,491},
                       {atom,relative},
                       {f,488},
                       {atom,volumerelative},
                       {f,490}]}}.
  {label,488}.
    {call_ext,0,{extfunc,prim_file,get_cwd,0}}.
    {test,is_tuple,{f,493},[{x,0}]}.
    {test,test_arity,{f,493},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,493},[{x,1}]}.
    {select_val,{x,1},{f,493},{list,[{atom,ok},{f,489},{atom,error},{f,491}]}}.
  {label,489}.
    {test_heap,2,3}.
    {put_list,{integer,47},{y,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,490}.
    {call_ext,0,{extfunc,prim_file,get_cwd,0}}.
    {test,is_tuple,{f,493},[{x,0}]}.
    {test,test_arity,{f,493},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,493},[{x,1}]}.
    {select_val,{x,1},{f,493},{list,[{atom,error},{f,491},{atom,ok},{f,492}]}}.
  {label,491}.
    {move,{y,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,492}.
    {move,{x,2},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,495},1}.
  {label,493}.
    {case_end,{x,0}}.


{function, absname_vr, 2, 495}.
  {label,494}.
    {func_info,{atom,erl_prim_loader},{atom,absname_vr},2}.
  {label,495}.
    {test,is_nonempty_list,{f,494},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_eq_exact,{f,496},[{x,2},{integer,47}]}.
    {test,is_nonempty_list,{f,496},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,496},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_eq_exact,{f,496},[{x,6},{integer,58}]}.
    {test_heap,4,5}.
    {put_list,{integer,58},{x,3},{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,496}.
    {test,is_nonempty_list,{f,494},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_eq_exact,{f,494},[{x,4},{integer,58}]}.
    {test,is_nonempty_list,{f,497},[{x,1}]}.
    {get_list,{x,1},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,497},[{x,7}]}.
    {get_list,{x,7},{x,8},{x,9}}.
    {test,is_eq_exact,{f,497},[{x,8},{integer,58}]}.
    {test,is_eq_exact,{f,497},[{x,6},{x,2}]}.
    {test_heap,2,6}.
    {put_list,{integer,47},{x,5},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {call_ext_only,2,{extfunc,erlang,'++',2}}.
  {label,497}.
    {allocate_heap,2,2,6}.
    {move,{x,2},{y,1}}.
    {move,{x,5},{y,0}}.
    {put_list,{x,2},{literal,":"},{x,0}}.
    {call_ext,1,{extfunc,prim_file,get_cwd,1}}.
    {test,is_tuple,{f,500},[{x,0}]}.
    {test,test_arity,{f,500},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_atom,{f,500},[{x,1}]}.
    {select_val,{x,1},{f,500},{list,[{atom,error},{f,498},{atom,ok},{f,499}]}}.
  {label,498}.
    {test_heap,6,0}.
    {put_list,{integer,47},{y,0},{x,0}}.
    {put_list,{integer,58},{x,0},{x,1}}.
    {put_list,{y,1},{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,499}.
    {test_heap,2,3}.
    {put_list,{integer,47},{y,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_ext_last,2,{extfunc,erlang,'++',2},2}.
  {label,500}.
    {case_end,{x,0}}.


{function, pathtype, 1, 502}.
  {label,501}.
    {func_info,{atom,erl_prim_loader},{atom,pathtype},1}.
  {label,502}.
    {test,is_list,{f,501},[{x,0}]}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {move,{atom,os_type},{x,0}}.
    {call_ext,1,{extfunc,erlang,system_info,1}}.
    {test,is_tuple,{f,507},[{x,0}]}.
    {test,test_arity,{f,507},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_atom,{f,507},[{x,1}]}.
    {select_val,{x,1},
                {f,507},
                {list,[{atom,unix},
                       {f,503},
                       {atom,ose},
                       {f,503},
                       {atom,win32},
                       {f,504},
                       {atom,vxworks},
                       {f,505}]}}.
  {label,503}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,509},1}.
  {label,504}.
    {move,{y,0},{x,0}}.
    {call_last,1,{f,514},1}.
  {label,505}.
    {move,{y,0},{x,0}}.
    {kill,{y,0}}.
    {call,1,{f,526}}.
    {test,is_tuple,{f,506},[{x,0}]}.
    {test,test_arity,{f,506},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,506},[{x,1},{atom,device}]}.
    {move,{atom,absolute},{x,0}}.
    {deallocate,1}.
    return.
  {label,506}.
    {move,{atom,relative},{x,0}}.
    {deallocate,1}.
    return.
  {label,507}.
    {case_end,{x,0}}.


{function, unix_pathtype, 1, 509}.
  {label,508}.
    {func_info,{atom,erl_prim_loader},{atom,unix_pathtype},1}.
  {label,509}.
    {test,is_nonempty_list,{f,512},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_eq_exact,{f,510},[{x,1},{integer,47}]}.
    {move,{atom,absolute},{x,0}}.
    return.
  {label,510}.
    {test,is_list,{f,511},[{x,1}]}.
    {allocate,0,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_last,1,{f,509},0}.
  {label,511}.
    {test,is_atom,{f,512},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{y,0},{x,1}}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,512}.
    {move,{atom,relative},{x,0}}.
    return.


{function, win32_pathtype, 1, 514}.
  {label,513}.
    {func_info,{atom,erl_prim_loader},{atom,win32_pathtype},1}.
  {label,514}.
    {test,is_nonempty_list,{f,524},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_list,{f,515},[{x,1}]}.
    {allocate,0,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_last,1,{f,514},0}.
  {label,515}.
    {test,is_atom,{f,516},[{x,1}]}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{y,0},{x,1}}.
    {trim,1,0}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_last,1,{f,514},0}.
  {label,516}.
    {test,is_nonempty_list,{f,517},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_list,{f,517},[{x,3}]}.
    {allocate,1,5}.
    {move,{x,1},{y,0}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {call_last,1,{f,514},1}.
  {label,517}.
    {test,is_integer,{f,520},[{x,1}]}.
    {select_val,{x,1},
                {f,520},
                {list,[{integer,47},{f,518},{integer,92},{f,519}]}}.
  {label,518}.
    {test,is_nonempty_list,{f,523},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_integer,{f,523},[{x,3}]}.
    {select_val,{x,3},
                {f,523},
                {list,[{integer,47},{f,522},{integer,92},{f,522}]}}.
  {label,519}.
    {test,is_nonempty_list,{f,523},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_integer,{f,523},[{x,3}]}.
    {select_val,{x,3},
                {f,523},
                {list,[{integer,47},{f,522},{integer,92},{f,522}]}}.
  {label,520}.
    {test,is_nonempty_list,{f,524},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,521},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_list,{f,521},[{x,5}]}.
    {allocate,2,7}.
    {move,{x,1},{y,1}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{x,0}}.
    {move,{x,3},{y,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,4,1}.
    {put_list,{y,0},{x,0},{x,1}}.
    {put_list,{y,1},{x,1},{x,0}}.
    {call_last,1,{f,502},2}.
  {label,521}.
    {test,is_eq_exact,{f,524},[{x,3},{integer,58}]}.
    {test,is_nonempty_list,{f,523},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_integer,{f,523},[{x,5}]}.
    {select_val,{x,5},
                {f,523},
                {list,[{integer,47},{f,522},{integer,92},{f,522}]}}.
  {label,522}.
    {move,{atom,absolute},{x,0}}.
    return.
  {label,523}.
    {move,{atom,volumerelative},{x,0}}.
    return.
  {label,524}.
    {move,{atom,relative},{x,0}}.
    return.


{function, vxworks_first, 1, 526}.
  {label,525}.
    {func_info,{atom,erl_prim_loader},{atom,vxworks_first},1}.
  {label,526}.
    {test,is_nonempty_list,{f,530},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_integer,{f,528},[{x,1}]}.
    {select_val,{x,1},
                {f,528},
                {list,[{integer,47},{f,527},{integer,92},{f,527}]}}.
  {label,527}.
    {move,{x,2},{x,1}}.
    {move,{literal,"/"},{x,2}}.
    {move,{atom,device},{x,0}}.
    {call_only,3,{f,533}}.
  {label,528}.
    {test,is_list,{f,529},[{x,1}]}.
    {allocate,0,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {call_last,1,{f,526},0}.
  {label,529}.
    {test_heap,2,3}.
    {put_list,{x,1},nil,{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{atom,not_device},{x,0}}.
    {call_only,3,{f,533}}.
  {label,530}.
    {test,is_nil,{f,531},[{x,0}]}.
    {move,{literal,{not_device,[],[]}},{x,0}}.
    return.
  {label,531}.
    {case_end,{x,0}}.


{function, vxworks_first2, 3, 533}.
  {label,532}.
    {func_info,{atom,erl_prim_loader},{atom,vxworks_first2},3}.
  {label,533}.
    {test,is_nonempty_list,{f,538},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_integer,{f,536},[{x,3}]}.
    {select_val,{x,3},
                {f,536},
                {list,[{integer,58},
                       {f,534},
                       {integer,47},
                       {f,535},
                       {integer,92},
                       {f,535}]}}.
  {label,534}.
    {test_heap,6,5}.
    {put_list,{integer,58},{x,2},{x,1}}.
    {put_tuple,3,{x,0}}.
    {put,{atom,device}}.
    {put,{x,4}}.
    {put,{x,1}}.
    return.
  {label,535}.
    {test_heap,6,5}.
    {put_list,{integer,47},{x,4},{x,1}}.
    {put_tuple,3,{x,3}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {move,{x,3},{x,0}}.
    return.
  {label,536}.
    {test,is_list,{f,537},[{x,3}]}.
    {allocate,2,5}.
    {move,{x,0},{y,1}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,533},2}.
  {label,537}.
    {test_heap,2,5}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,4},{x,1}}.
    {call_only,3,{f,533}}.
  {label,538}.
    {test,is_nil,{f,539},[{x,1}]}.
    {test_heap,4,3}.
    {put_tuple,3,{x,1}}.
    {put,{x,0}}.
    {put,nil}.
    {put,{x,2}}.
    {move,{x,1},{x,0}}.
    return.
  {label,539}.
    {case_end,{x,1}}.


{function, normalize, 2, 541}.
  {label,540}.
    {func_info,{atom,erl_prim_loader},{atom,normalize},2}.
  {label,541}.
    {test,is_nonempty_list,{f,545},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_list,{f,542},[{x,2}]}.
    {allocate,1,4}.
    {move,{x,1},{y,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,541},1}.
  {label,542}.
    {test,is_atom,{f,543},[{x,2}]}.
    {allocate,2,4}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,1},{y,1}}.
    {call_ext,1,{extfunc,erlang,atom_to_list,1}}.
    {move,{y,0},{x,1}}.
    {trim,1,1}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,541},1}.
  {label,543}.
    {test,is_eq_exact,{f,544},[{x,2},{integer,92}]}.
    {test_heap,2,4}.
    {put_list,{integer,47},{x,1},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,541}}.
  {label,544}.
    {test_heap,2,4}.
    {put_list,{x,2},{x,1},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,541}}.
  {label,545}.
    {test,is_nil,{f,546},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {call_only,1,{f,436}}.
  {label,546}.
    {case_end,{x,0}}.


{function, module_info, 0, 548}.
  {label,547}.
    {func_info,{atom,erl_prim_loader},{atom,module_info},0}.
  {label,548}.
    {move,{atom,erl_prim_loader},{x,0}}.
    {call_ext_only,1,{extfunc,erlang,get_module_info,1}}.


{function, module_info, 1, 550}.
  {label,549}.
    {func_info,{atom,erl_prim_loader},{atom,module_info},1}.
  {label,550}.
    {move,{x,0},{x,1}}.
    {move,{atom,erl_prim_loader},{x,0}}.
    {call_ext_only,2,{extfunc,erlang,get_module_info,2}}.


{function, '-foldl_archive/3-fun-0-', 3, 552}.
  {label,551}.
    {func_info,{atom,erl_prim_loader},{atom,'-foldl_archive/3-fun-0-'},3}.
  {label,552}.
    {test,is_tuple,{f,551},[{x,0}]}.
    {test,test_arity,{f,551},[{x,0},3]}.
    {allocate_heap,0,4,3}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {get_tuple_element,{x,0},2,{x,5}}.
    {put_tuple,3,{x,0}}.
    {put,{x,3}}.
    {put,{x,4}}.
    {put,{x,5}}.
    {call_fun,2}.
    {test,is_tuple,{f,553},[{x,0}]}.
    {test,test_arity,{f,553},[{x,0},2]}.
    {test_heap,4,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {put_tuple,3,{x,0}}.
    {put,{x,1}}.
    {put,{atom,true}}.
    {put,{x,2}}.
    {deallocate,0}.
    return.
  {label,553}.
    {badmatch,{x,0}}.


{function, '-open_archive/3-fun-0-', 3, 555}.
  {label,554}.
    {func_info,{atom,erl_prim_loader},{atom,'-open_archive/3-fun-0-'},3}.
  {label,555}.
    {test,is_tuple,{f,554},[{x,0}]}.
    {test,test_arity,{f,554},[{x,0},3]}.
    {allocate,4,3}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{y,1}}.
    {get_tuple_element,{x,0},2,{y,0}}.
    {move,{x,1},{y,3}}.
    {move,{integer,47},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,2}}.
    {call,2,{f,441}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,3}}.
    {put,{x,0}}.
    {put,{y,1}}.
    {put,{y,0}}.
    {move,{x,0},{y,1}}.
    {move,{y,3},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{y,1},{y,3}}.
    {trim,3,1}.
    {call_fun,2}.
    {test,is_tuple,{f,556},[{x,0}]}.
    {test,test_arity,{f,556},[{x,0},2]}.
    {test_heap,7,1}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{atom,true}}.
    {put,{y,0}}.
    {put_tuple,3,{x,0}}.
    {put,{atom,true}}.
    {put,{x,2}}.
    {put,{x,1}}.
    {deallocate,1}.
    return.
  {label,556}.
    {badmatch,{x,0}}.


{function, '-prim_read_file_info/2-fun-0-', 3, 558}.
  {label,557}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-prim_read_file_info/2-fun-0-'},
               3}.
  {label,558}.
    {test,is_tuple,{f,557},[{x,0}]}.
    {test,test_arity,{f,557},[{x,0},3]}.
    {allocate,0,3}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,4}}.
    {bif,hd,{f,559},[{x,3}],{x,0}}.
    {bif,'=:=',{f,559},[{x,0},nil],{x,0}}.
    {bif,tl,{f,559},[{x,3}],{x,5}}.
    {bif,'=:=',{f,559},[{x,5},{x,2}],{x,5}}.
    {bif,'and',{f,559},[{x,0},{x,5}],{x,0}}.
    {test,is_eq_exact,{f,559},[{x,0},{atom,true}]}.
    {move,{x,4},{x,0}}.
    {call_fun,0}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,false}}.
    {put,{x,1}}.
    {deallocate,0}.
    return.
  {label,559}.
    {test,is_eq_exact,{f,560},[{x,3},{x,2}]}.
    {move,{x,4},{x,0}}.
    {call_fun,0}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,false}}.
    {put,{x,1}}.
    {deallocate,0}.
    return.
  {label,560}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,0}.
    return.


{function, '-prim_list_dir/2-fun-0-', 3, 562}.
  {label,561}.
    {func_info,{atom,erl_prim_loader},{atom,'-prim_list_dir/2-fun-0-'},3}.
  {label,562}.
    {test,is_tuple,{f,561},[{x,0}]}.
    {test,test_arity,{f,561},[{x,0},3]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {test,is_tuple,{f,561},[{x,1}]}.
    {test,test_arity,{f,561},[{x,1},2]}.
    {allocate_zero,2,4}.
    {get_tuple_element,{x,1},0,{x,4}}.
    {get_tuple_element,{x,1},1,{x,5}}.
    {test,is_nonempty_list,{f,567},[{x,3}]}.
    {get_list,{x,3},{x,0},{x,6}}.
    {test,is_eq_exact,{f,564},[{x,6},{x,2}]}.
    {test,is_nil,{f,563},[{x,0}]}.
    {test_heap,6,6}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,5}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,563}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {call,1,{f,436}}.
    {test_heap,8,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{y,1}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,564}.
    {test,is_nil,{f,565},[{x,0}]}.
    {test,is_nonempty_list,{f,565},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_eq_exact,{f,565},[{x,8},{x,2}]}.
    {move,{x,7},{x,0}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {call,1,{f,436}}.
    {test_heap,8,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{y,1}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,565}.
    {test,is_nil,{f,566},[{x,6}]}.
    {test,is_eq_exact,{f,566},[{x,2},{literal,[[]]}]}.
    {move,{x,5},{y,1}}.
    {call,1,{f,436}}.
    {test_heap,8,1}.
    {put_list,{x,0},{y,1},{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,566}.
    {test,is_nil,{f,567},[{x,0}]}.
    {test,is_nonempty_list,{f,567},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_nil,{f,567},[{x,8}]}.
    {test,is_eq_exact,{f,567},[{x,2},{literal,[[]]}]}.
    {move,{x,7},{x,0}}.
    {move,{x,5},{y,1}}.
    {call,1,{f,436}}.
    {test_heap,8,1}.
    {put_list,{x,0},{y,1},{x,0}}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.
  {label,567}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,2}.
    return.


{function, '-prim_get_file/2-fun-0-', 3, 569}.
  {label,568}.
    {func_info,{atom,erl_prim_loader},{atom,'-prim_get_file/2-fun-0-'},3}.
  {label,569}.
    {test,is_tuple,{f,568},[{x,0}]}.
    {test,test_arity,{f,568},[{x,0},3]}.
    {allocate,0,3}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},2,{x,4}}.
    {test,is_eq_exact,{f,570},[{x,3},{x,2}]}.
    {move,{x,4},{x,0}}.
    {call_fun,0}.
    {test_heap,6,1}.
    {put_tuple,2,{x,1}}.
    {put,{atom,ok}}.
    {put,{x,0}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,false}}.
    {put,{x,1}}.
    {deallocate,0}.
    return.
  {label,570}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,0}.
    return.


{function, '-prim_set_primary_archive/3-fun-0-', 2, 572}.
  {label,571}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-prim_set_primary_archive/3-fun-0-'},
               2}.
  {label,572}.
    {test,is_tuple,{f,571},[{x,0}]}.
    {test,test_arity,{f,571},[{x,0},3]}.
    {allocate_zero,1,2}.
    {get_tuple_element,{x,0},0,{x,2}}.
    {test,is_nonempty_list,{f,573},[{x,2}]}.
    {get_list,{x,2},{x,0},{x,3}}.
    {test,is_nil,{f,573},[{x,0}]}.
    {test,is_nonempty_list,{f,573},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_eq_exact,{f,573},[{x,4},{literal,"nibe"}]}.
    {test,is_nonempty_list,{f,573},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nil,{f,573},[{x,7}]}.
    {move,{x,6},{x,0}}.
    {move,{x,1},{y,0}}.
    {call,1,{f,436}}.
    {move,{literal,"/ebin"},{x,1}}.
    {call_ext,2,{extfunc,erlang,'++',2}}.
    {test_heap,5,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,1}.
    return.
  {label,573}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,{atom,true}}.
    {put,{x,1}}.
    {deallocate,1}.
    return.


{function, '-efile_multi_get_file_from_port2/8-fun-0-', 6, 575}.
  {label,574}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-efile_multi_get_file_from_port2/8-fun-0-'},
               6}.
  {label,575}.
    {move,{x,5},{x,6}}.
    {move,{x,2},{x,5}}.
    {move,{x,6},{x,2}}.
    {move,{x,1},{x,6}}.
    {move,{x,4},{x,1}}.
    {move,{x,0},{x,4}}.
    {move,{x,6},{x,0}}.
    {call_only,6,{f,148}}.


{function, '-handle_get_cwd/2-fun-1-', 2, 577}.
  {label,576}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_get_cwd/2-fun-1-'},2}.
  {label,577}.
    {allocate,2,2}.
    {'catch',{y,1},{f,578}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,279}}.
  {label,578}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,579},[{x,0}]}.
    {test,test_arity,{f,579},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,579},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,579}.
    {deallocate,2}.
    return.


{function, '-handle_get_cwd/2-fun-0-', 2, 581}.
  {label,580}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_get_cwd/2-fun-0-'},2}.
  {label,581}.
    {allocate,2,2}.
    {'catch',{y,1},{f,582}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,188}}.
  {label,582}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,583},[{x,0}]}.
    {test,test_arity,{f,583},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,583},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,583}.
    {deallocate,2}.
    return.


{function, '-handle_read_file_info/2-fun-1-', 2, 585}.
  {label,584}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-handle_read_file_info/2-fun-1-'},
               2}.
  {label,585}.
    {allocate,2,2}.
    {'catch',{y,1},{f,586}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,277}}.
  {label,586}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,587},[{x,0}]}.
    {test,test_arity,{f,587},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,587},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,587}.
    {deallocate,2}.
    return.


{function, '-handle_read_file_info/2-fun-0-', 2, 589}.
  {label,588}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-handle_read_file_info/2-fun-0-'},
               2}.
  {label,589}.
    {allocate,2,2}.
    {'catch',{y,1},{f,590}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,185}}.
  {label,590}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,591},[{x,0}]}.
    {test,test_arity,{f,591},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,591},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,591}.
    {deallocate,2}.
    return.


{function, '-handle_list_dir/2-fun-1-', 2, 593}.
  {label,592}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_list_dir/2-fun-1-'},2}.
  {label,593}.
    {allocate,2,2}.
    {'catch',{y,1},{f,594}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,275}}.
  {label,594}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,595},[{x,0}]}.
    {test,test_arity,{f,595},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,595},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,595}.
    {deallocate,2}.
    return.


{function, '-handle_list_dir/2-fun-0-', 2, 597}.
  {label,596}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_list_dir/2-fun-0-'},2}.
  {label,597}.
    {allocate,2,2}.
    {'catch',{y,1},{f,598}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,2,{f,182}}.
  {label,598}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,599},[{x,0}]}.
    {test,test_arity,{f,599},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,599},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,599}.
    {deallocate,2}.
    return.


{function, '-handle_release_archives/1-fun-0-', 1, 601}.
  {label,600}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-handle_release_archives/1-fun-0-'},
               1}.
  {label,601}.
    {allocate,2,1}.
    {'catch',{y,1},{f,602}}.
    {move,{x,0},{y,0}}.
    {call,1,{f,179}}.
  {label,602}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,603},[{x,0}]}.
    {test,test_arity,{f,603},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,603},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,603}.
    {deallocate,2}.
    return.


{function, '-handle_set_primary_archive/3-fun-0-', 3, 605}.
  {label,604}.
    {func_info,{atom,erl_prim_loader},
               {atom,'-handle_set_primary_archive/3-fun-0-'},
               3}.
  {label,605}.
    {allocate,2,3}.
    {'catch',{y,1},{f,606}}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,3,{f,176}}.
  {label,606}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,607},[{x,0}]}.
    {test,test_arity,{f,607},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,607},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,607}.
    {deallocate,2}.
    return.


{function, '-handle_get_file/3-fun-1-', 3, 609}.
  {label,608}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_get_file/3-fun-1-'},3}.
  {label,609}.
    {allocate,2,3}.
    {'catch',{y,1},{f,610}}.
    {move,{x,2},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,3,{f,244}}.
  {label,610}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,611},[{x,0}]}.
    {test,test_arity,{f,611},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,611},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,611}.
    {deallocate,2}.
    return.


{function, '-handle_get_file/3-fun-0-', 3, 613}.
  {label,612}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_get_file/3-fun-0-'},3}.
  {label,613}.
    {allocate,2,3}.
    {'catch',{y,1},{f,614}}.
    {move,{x,2},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,3,{f,158}}.
  {label,614}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,615},[{x,0}]}.
    {test,test_arity,{f,615},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,615},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,615}.
    {deallocate,2}.
    return.


{function, '-handle_get_files/4-fun-0-', 4, 617}.
  {label,616}.
    {func_info,{atom,erl_prim_loader},{atom,'-handle_get_files/4-fun-0-'},4}.
  {label,617}.
    {allocate,2,4}.
    {'catch',{y,1},{f,618}}.
    {move,{x,2},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,4}}.
    {move,{x,0},{x,3}}.
    {move,{x,4},{x,0}}.
    {move,{x,0},{y,0}}.
    {call,4,{f,136}}.
  {label,618}.
    {catch_end,{y,1}}.
    {test,is_tuple,{f,619},[{x,0}]}.
    {test,test_arity,{f,619},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {test,is_eq_exact,{f,619},[{x,1},{atom,'EXIT'}]}.
    {test_heap,6,3}.
    {put_tuple,2,{x,1}}.
    {put,{atom,error}}.
    {put,{x,2}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{y,0}}.
    {deallocate,2}.
    return.
  {label,619}.
    {deallocate,2}.
    return.


{function, '-start/3-fun-0-', 4, 621}.
  {label,620}.
    {func_info,{atom,erl_prim_loader},{atom,'-start/3-fun-0-'},4}.
  {label,621}.
    {move,{x,3},{x,4}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,4,{f,17}}.
